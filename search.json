[{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ropengov.github.io/retroharmonize/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://ropengov.github.io/retroharmonize/articles/afrobarometer.html","id":"importing-afrobarometer-files","dir":"Articles","previous_headings":"","what":"Importing Afrobarometer Files","title":"Case Study: Working With Afrobarometer surveys","text":"start reading three rounds Afrobarometer. Let’s give bit meaningful identifiers file names: can review main descriptive metadata correctly present document_surveys(). Create metadata table, data map, contains information variable names labels, row correspnds one variable survey data file. function metadata_create(), extracts metadata survery data files, normalizes variable labels, identifies ranges substantive responses missing value codes.","code":"library(retroharmonize) library(dplyr) library(tidyr) ### use here your own directory ab <- dir ( afrobarometer_dir, pattern = \"sav$\" ) afrobarometer_rounds <- file.path(afrobarometer_dir, ab)  ab_waves <- read_surveys(afrobarometer_rounds, .f='read_spss') attr(ab_waves[[1]], \"id\") <- \"Afrobarometer_R5\" attr(ab_waves[[2]], \"id\") <- \"Afrobarometer_R6\" attr(ab_waves[[3]], \"id\") <- \"Afrobarometer_R7\" documented_ab_waves <- document_surveys(ab_waves) print(documented_ab_waves) #> # A tibble: 3 × 5 #>   id               filename                               ncol  nrow object_size #>   <chr>            <chr>                                 <int> <int>       <dbl> #> 1 Afrobarometer_R5 merged-round-5-data-34-countries-201…   349 51587   159027592 #> 2 Afrobarometer_R6 merged_r6_data_2016_36countries2.sav    365 53935   172064576 #> 3 Afrobarometer_R7 r7_merged_data_34ctry.release.sav       367 45823   148759488 ab_metadata <- lapply ( X = ab_waves, FUN = metadata_create ) ab_metadata <- do.call(rbind, ab_metadata)"},{"path":"https://ropengov.github.io/retroharmonize/articles/afrobarometer.html","id":"working-with-metadata","dir":"Articles","previous_headings":"","what":"Working with metadata","title":"Case Study: Working With Afrobarometer surveys","text":"metadata file select rows correspond variables ’re interested : rowid unique case identifier, DATEINTR interview date, COUNTRY containing information country interview conducted, REGION region (sub-national unit) interview conducted, withinwt weighting factor. , select variables word “trust” normalized variable label. variables, create normalized variable names (var_name) labels (var_label). reduce size analysis, choose variables based normalized variable names (var_name). resulting table information variables selected harmonization looks follows: merge_surveys() function harmonizes variable names, variable labels survey identifiers returns list surveys (class survey().) parameter var_harmonization must list data frame contains least original file name (filename), original variable names (var_name_orig), new variable names (var_name) labels (var_label), program knows variables take files call label transformation. Review important metadata document_surveys():","code":"library(dplyr) to_harmonize <- ab_metadata %>%   filter ( var_name_orig %in%               c(\"rowid\", \"DATEINTR\", \"COUNTRY\", \"REGION\", \"withinwt\") |              grepl(\"trust \", label_orig ) ) %>%   mutate ( var_label = var_label_normalize(label_orig)) %>%   mutate ( var_label = case_when (      grepl(\"^unique identifier\", var_label) ~ \"unique_id\",      TRUE ~ var_label)) %>%   mutate ( var_name = val_label_normalize(var_label)) to_harmonize <- to_harmonize %>%   filter (      grepl ( \"president|parliament|religious|traditional|unique_id|weight|country|date_of_int\", var_name)     ) head(to_harmonize %>%        select ( all_of(c(\"id\", \"var_name\", \"var_label\"))), 10) #>                  id                                             var_name #> 1  Afrobarometer_R5                                            unique_id #> 2  Afrobarometer_R5                                              country #> 3  Afrobarometer_R5                                    date_of_interview #> 4  Afrobarometer_R5 trust_key_leadership_figure_president_prime_minister #> 5  Afrobarometer_R5                   trust_parliament_national_assembly #> 6  Afrobarometer_R5                      within_country_weighting_factor #> 7  Afrobarometer_R6                                            unique_id #> 8  Afrobarometer_R6                                              country #> 9  Afrobarometer_R6                                    date_of_interview #> 10 Afrobarometer_R6                                      trust_president #>                                               var_label #> 1                                             unique_id #> 2                                               country #> 3                                     date of interview #> 4  trust key leadership figure president prime minister #> 5                    trust parliament national assembly #> 6                       within country weighting factor #> 7                                             unique_id #> 8                                               country #> 9                                     date of interview #> 10                                      trust president merged_ab <- merge_surveys ( waves = ab_waves,                             var_harmonization = to_harmonize  )  # country will be a character variable, and doesn't need a label merged_ab <- lapply ( merged_ab,           FUN = function(x) x  %>%            mutate( country = as_character(country))) documenteded_merged_ab <- document_surveys(merged_ab) print(documenteded_merged_ab) #> # A tibble: 3 × 5 #>   id               filename                               ncol  nrow object_size #>   <chr>            <chr>                                 <int> <int>       <dbl> #> 1 Afrobarometer_R5 merged-round-5-data-34-countries-201…     6 51587    11570496 #> 2 Afrobarometer_R6 merged_r6_data_2016_36countries2.sav      8 53935     8652392 #> 3 Afrobarometer_R7 r7_merged_data_34ctry.release.sav         8 45823     7353968"},{"path":"https://ropengov.github.io/retroharmonize/articles/afrobarometer.html","id":"harmonization","dir":"Articles","previous_headings":"","what":"Harmonization","title":"Case Study: Working With Afrobarometer surveys","text":"Afrobarometer trust measured four-point ordinal rating scales. data best analyzed ordinal models, assume points equidistant. However, get quick idea data look like, assign numbers 0-3, 0 corresponding least trust, 3 corresponding trust, time-analyze data metric. review harmonization single survey use pull_survey(). select Afrobarometer Round 6. document_survey_item() function shows metadata single variable. Afrobarometer’s SPSS files mark missing values, careful. set labels identified missing: set valid category labels missing value labels follows: create harmonization function harmonize_values() prototype function. fact, just re-setting default values original function. makes future reference pipelines easier, can used question block , case variables starts_with(\"trust\"). apply function trust variables. harmonize_surveys() function binds variables present surveys. Let’s look attributes harmonized_ab_waves. Let’s add year interview: keep example manageable, subset datasets include five countries.","code":"R6 <- pull_survey ( merged_ab, id = \"Afrobarometer_R6\" ) attributes(R6$trust_president[1:20]) #> $labels #>                          Missing                       Not at all  #>                               -1                                0  #>                    Just a little                         Somewhat  #>                                1                                2  #>                            A lot Don’t know/ Haven't heard enough  #>                                3                                9  #>                          Refused  #>                               98  #>  #> $label #> [1] \"trust president\" #>  #> $Afrobarometer_R6_name #> [1] \".\" #>  #> $Afrobarometer_R6_values #> -1  0  1  2  3  9 98  #> -1  0  1  2  3  9 98  #>  #> $Afrobarometer_R6_label #> [1] \"Q52a. Trust president\" #>  #> $Afrobarometer_R6_labels #>                          Missing                       Not at all  #>                               -1                                0  #>                    Just a little                         Somewhat  #>                                1                                2  #>                            A lot Don’t know/ Haven't heard enough  #>                                3                                9  #>                          Refused  #>                               98  #>  #> $id #> [1] \"Afrobarometer_R6\" #>  #> $class #> [1] \"retroharmonize_labelled_spss_survey\" \"haven_labelled_spss\"                 #> [3] \"haven_labelled\" document_survey_item(R6$trust_president) #> $code_table #> # A tibble: 7 × 5 #>   values Afrobarometer_R6_values labels           Afrobarometer_R6_labe… missing #>    <dbl>                   <dbl> <chr>            <chr>                  <lgl>   #> 1     -1                      -1 Missing          Missing                FALSE   #> 2      0                       0 Not at all       Not at all             FALSE   #> 3      1                       1 Just a little    Just a little          FALSE   #> 4      2                       2 Somewhat         Somewhat               FALSE   #> 5      3                       3 A lot            A lot                  FALSE   #> 6      9                       9 Don’t know/ Hav… Don’t know/ Haven't h… FALSE   #> 7     98                      98 Refused          Refused                FALSE   #>  #> $history_var_name #>                  name Afrobarometer_R6_name  #>  \"R6$trust_president\"                   \".\"  #>  #> $history_var_label #>                   label  Afrobarometer_R6_label  #>       \"trust president\" \"Q52a. Trust president\"  #>  #> $history_na_range #> character(0) #>  #> $history_id #> [1] \"Afrobarometer_R6\" collect_na_labels( to_harmonize ) #> [1] \"Not asked\" collect_val_labels (to_harmonize %>%                       filter ( grepl( \"trust\", var_name) )) #>  [1] \"Missing\"                          \"Not at all\"                       #>  [3] \"Just a little\"                    \"Somewhat\"                         #>  [5] \"A lot\"                            \"Don't know/Haven't heard enough\"  #>  [7] \"Refused\"                          \"Don’t know/ Haven't heard enough\" #>  [9] \"Don't know/ Haven't heard enough\" \"Not Asked in this Country\"        #> [11] \"Not Asked in Country\"             \"Don’t know/Haven’t heard enough\"  #> [13] \"Not asked in the country\" harmonize_ab_trust <- function(x) {   label_list <- list(     from = c(\"^not\", \"^just\", \"^somewhat\",              \"^a\", \"^don\", \"^ref\", \"^miss\", \"^not\", \"^inap\"),      to = c(\"not_at_all\", \"little\", \"somewhat\",             \"a_lot\", \"do_not_know\", \"declined\", \"inap\", \"inap\",             \"inap\"),      numeric_values = c(0,1,2,3, 99997, 99998, 99999,99999, 99999)   )      harmonize_values(     x,      harmonize_labels = label_list,      na_values = c(\"do_not_know\"=99997,                   \"declined\"=99998,                   \"inap\"=99999)   ) } harmonized_ab_waves <- harmonize_surveys (    waves = merged_ab,    .f = harmonize_ab_trust ) h_ab_structure <- attributes(harmonized_ab_waves) h_ab_structure$row.names <- NULL # We have over 100K row names h_ab_structure #> $names #> [1] \"date_of_interview\"                                    #> [2] \"unique_id\"                                            #> [3] \"country\"                                              #> [4] \"within_country_weighting_factor\"                      #> [5] \"trust_key_leadership_figure_president_prime_minister\" #> [6] \"trust_parliament_national_assembly\"                   #> [7] \"trust_president\"                                      #> [8] \"trust_traditional_leaders\"                            #> [9] \"trust_religious_leaders\"                              #>  #> $class #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\" #>  #> $id #> [1] \"Waves: Afrobarometer_R5; Afrobarometer_R6; Afrobarometer_R7\" #>  #> $filename #> [1] \"Original files: merged-round-5-data-34-countries-2011-2013-last-update-july-2015.sav; merged_r6_data_2016_36countries2.sav; r7_merged_data_34ctry.release.sav\" harmonized_ab_waves <- harmonized_ab_waves %>%   mutate ( year = as.integer(substr(as.character(     date_of_interview),1,4))) harmonized_ab_waves <- harmonized_ab_waves %>%   filter ( country %in% c(\"Niger\", \"Nigeria\", \"Algeria\",                            \"South Africa\", \"Madagascar\"))"},{"path":"https://ropengov.github.io/retroharmonize/articles/afrobarometer.html","id":"analyzing-the-harmonized-data","dir":"Articles","previous_headings":"","what":"Analyzing the harmonized data","title":"Case Study: Working With Afrobarometer surveys","text":"harmonized data can exported analyzed another statistical program. labelled survey data stored labelled_spss_survey() vectors, complex class retains metadata reproducibility. statistical R packages know . data presented either numeric data as_numeric() categorical as_factor(). (See fall back generic .factor() .numeric() methods labelled_spss_survey class vignette.) Please note numeric form trust variables directly comparable numeric averages Eurobarometer trust variables, middle range 1.5 0.5. factor representation, without weighting: subsetted datasets meet vignette size limitations. following code without reducing number countries, get following results:","code":"harmonized_ab_waves %>%   mutate_at ( vars(starts_with(\"trust\")),                ~as_numeric(.)*within_country_weighting_factor) %>%   select ( -all_of(\"within_country_weighting_factor\") ) %>%   group_by ( country, year ) %>%   summarize_if ( is.numeric, mean, na.rm=TRUE )  #> # A tibble: 17 × 7 #> # Groups:   country [5] #>    country       year trust_key_leadership_… trust_parliament_n… trust_president #>    <chr>        <int>                  <dbl>               <dbl>           <dbl> #>  1 Algeria       2013                   2.59                1.70          NaN    #>  2 Algeria       2015                 NaN                   1.82            2.00 #>  3 Madagascar    2013                   1.96              NaN             NaN    #>  4 Madagascar    2014                 NaN                   1.75            1.95 #>  5 Madagascar    2015                 NaN                   1.94            2.15 #>  6 Madagascar    2018                 NaN                   1.71            1.83 #>  7 Niger         2013                   2.59                2.52          NaN    #>  8 Niger         2015                 NaN                   2.43            2.64 #>  9 Niger         2018                 NaN                   2.31            2.42 #> 10 Nigeria       2012                   1.59                1.43          NaN    #> 11 Nigeria       2013                   1.59                1.84          NaN    #> 12 Nigeria       2014                 NaN                   1.45            1.64 #> 13 Nigeria       2015                 NaN                   1.15            1.30 #> 14 Nigeria       2017                 NaN                   1.57            2.06 #> 15 South Africa  2011                   2.04                1.84          NaN    #> 16 South Africa  2015                 NaN                   1.82            1.87 #> 17 South Africa  2018                 NaN                   1.70            1.86 #> # … with 2 more variables: trust_traditional_leaders <dbl>, #> #   trust_religious_leaders <dbl> library(tidyr)  ## tidyr::pivot_longer() harmonized_ab_waves %>%   select ( -all_of(\"within_country_weighting_factor\") ) %>%   mutate_if ( is.labelled_spss_survey, as_factor) %>%   pivot_longer ( starts_with(\"trust\"),                          names_to  = \"institution\",                          values_to = \"category\") %>%   mutate ( institution = gsub(\"^trust_\", \"\", institution) ) %>%   group_by ( country, year, institution, category ) %>%   summarize ( n = n() )  #> `summarise()` has grouped output by 'country', 'year', 'institution'. You can override using the `.groups` argument. #> # A tibble: 311 × 5 #> # Groups:   country, year, institution [85] #>    country  year institution                                    category       n #>    <chr>   <int> <chr>                                          <fct>      <int> #>  1 Algeria  2013 key_leadership_figure_president_prime_minister little        75 #>  2 Algeria  2013 key_leadership_figure_president_prime_minister somewhat     341 #>  3 Algeria  2013 key_leadership_figure_president_prime_minister a_lot        759 #>  4 Algeria  2013 key_leadership_figure_president_prime_minister do_not_kn…    13 #>  5 Algeria  2013 key_leadership_figure_president_prime_minister inap          16 #>  6 Algeria  2013 parliament_national_assembly                   little       317 #>  7 Algeria  2013 parliament_national_assembly                   somewhat     419 #>  8 Algeria  2013 parliament_national_assembly                   a_lot         95 #>  9 Algeria  2013 parliament_national_assembly                   do_not_kn…   131 #> 10 Algeria  2013 parliament_national_assembly                   inap         242 #> # … with 301 more rows"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"importing-arab-barometer-files","dir":"Articles","previous_headings":"","what":"Importing Arab Barometer Files","title":"Case Study: Working With Arab Barometer Surveys","text":"start importing Arab Barometer files. following chunk evaluated, contains 5 waves, two selected waves tutorial. want re-run tutorial, need define arabbarometer_dir download Arab Barometer files . Alternatively, can load pre-saved results first steps first, vignette-setup chunk, case can start evaluating R code chunks document-merged-ab. appended meaningful identifiers file names follows (must follow ordering files arabbarometer_dir dir): use document_surveys()see primary descriptive information survey wave (one harmonized survey set) files. Visually check file names correspond meaningful IDs gave survey wave, .e., Arab_Barometer_1 corresponds ABI_English.sav. obtained 5 nested lists arab_waves list, containing data one Arab Barometer survey wave (surveys taken roughly time, questions different languages countries.). create longitudinal tables, .e., join several survey waves single table, important review methodology round Arabbarometer’s surveys, structure, modifications, changes topics interest.","code":"### use here your own <arabbarometer_dir> directory ab <- dir(arabbarometer_dir, pattern = \"sav$\") arabbarometer_rounds <- here(arabbarometer_dir, ab) arab_waves <- read_surveys(arabbarometer_rounds, .f='read_spss') # In the vignette this is pre-loaded. attr(arab_waves[[1]],\"id\") <- \"Arab_Barometer_5\" attr(arab_waves[[2]],\"id\") <- \"Arab_Barometer_1\" attr(arab_waves[[3]],\"id\") <- \"Arab_Barometer_2\" attr(arab_waves[[4]],\"id\") <- \"Arab_Barometer_3\" attr(arab_waves[[5]],\"id\") <- \"Arab_Barometer_4\" # In the vignette this is pre-loaded. documented_arab_waves <- document_surveys(arab_waves) print(documented_arab_waves) #> # A tibble: 5 × 5 #>   id               filename           ncol  nrow object_size #>   <chr>            <chr>             <int> <int>       <dbl> #> 1 Arab_Barometer_5 AB-WaveV-EN.sav     348 26780    78131600 #> 2 Arab_Barometer_1 ABI_English.sav     182  7337    12089512 #> 3 Arab_Barometer_2 ABII_English.sav    469 12782    51603152 #> 4 Arab_Barometer_3 ABIII_English.sav   297 14809    37826816 #> 5 Arab_Barometer_4 ABIV_English.sav    291  9000    23315888"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"joint-metadata-creation","dir":"Articles","previous_headings":"Importing Arab Barometer Files","what":"Joint Metadata Creation","title":"Case Study: Working With Arab Barometer Surveys","text":"step, build comprehensive metadata table maps information variable names labels survey data. row table refers different variable survey data file. accomplished using metadata_create() function, collects metadata survey data files, normalizes variable labels, defines valid missing value ranges, codes, labels. Let’s randomly review metadata: select metadata file rowid unique observation identifier, auxiliary variables: date interview date,COUNTRY containing country interview conducted, wt weighting factor, “real” survey questions. countries Arab Barometer datasets countries Middle East North Africa (MENA) region significant Arab speaking population. data contain MENA countries, example, Palestine present dataset, Israel . metadata table also helps identify survey items interest; case, chose Election, parliamentary, Election fork exact question parliamentary election, evaluate last parliamentary election?","code":"# In the vignette this is pre-loaded. arabbarometer_metadata <- metadata_surveys_create(arab_waves) set.seed(2021) arabbarometer_metadata %>%    select (-all_of(c(\"filename\", \"class_orig\"))) %>%   sample_n(6) #>                 id var_name_orig #> 1 Arab_Barometer_2         q7112 #> 2 Arab_Barometer_5        Q521_1 #> 3 Arab_Barometer_4    aid1b1lang #> 4 Arab_Barometer_1         q2572 #> 5 Arab_Barometer_2         q5164 #> 6 Arab_Barometer_2         eg802 #>                                                                                                                                                 label_orig #> 1 q7112 to what extent do you agree or disagree with the following statements 2 in order to eliminate global terrorism, the palestine issue must be solved #> 2                                                                                                                   guaranteed freedoms opinion expression #> 3                                                                                                       aid1b1 respondent participated in language program #> 4                                                                                     q257 2 can you remember the name of the speaker leader of parliament #> 5 q5164 to what extent do you agree or disagree with the following statements 4 a democratic system may have problems, yet it is better than other systems #> 6                                eg802 did you participate in the protests against former president hosni mubarak between january 25 and february 11, 2011 #>                labels        valid_labels na_labels na_range n_labels #> 1 0, 1, 2, 3, 4, 8, 9 0, 1, 2, 3, 4, 8, 9                 NA        7 #> 2  1, 2, 3, 4, 98, 99  1, 2, 3, 4, 98, 99                 NA        6 #> 3                0, 1                0, 1                 NA        2 #> 4    1, 2, 97, 98, 99    1, 2, 97, 98, 99                 NA        5 #> 5 0, 1, 2, 3, 4, 8, 9 0, 1, 2, 3, 4, 8, 9                 NA        7 #> 6       0, 1, 2, 8, 9       0, 1, 2, 8, 9                 NA        5 #>   n_valid_labels n_na_labels #> 1              7           0 #> 2              6           0 #> 3              2           0 #> 4              5           0 #> 5              7           0 #> 6              5           0"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"retrospective-survey-harmonization","dir":"Articles","previous_headings":"","what":"Retrospective Survey Harmonization","title":"Case Study: Working With Arab Barometer Surveys","text":"Retrospective survey harmonization two steps: variable harmonization label harmonization.","code":""},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"harmonizing-the-variable-names","dir":"Articles","previous_headings":"Retrospective Survey Harmonization","what":"Harmonizing the variable names","title":"Case Study: Working With Arab Barometer Surveys","text":"start variable harmonization process. Variable harmonization means date interview called exactly way survey table, .e. date date_of_interview, date_of_interview. auxiliary demography variables appear relatively well harmonized Arab Barometer, survey items require work. Label harmonization means label Algeria country variable must single value, example, Algeria, instead Algeria, algeria, 1. Algeria. case, variable name harmonization simple task. names need bit normalization programmatic use. function merge_surveys() harmonizes variable names, variable labels, survey identifiers, returns list surveys (class survey().) parameter var_harmonization must list data frame contains least original file name (filename), original variable names (var_name_orig), new variable names (var_name) labels (var_label), function correctly makes harmonization steps. Let’s take look variables: variable harmonization took place, variable names practical programmatic use. apply snakecase variable naming: Now variable names ready use programmatic way: merged_ab_elections list, nests individual, subsetted surveys. use nested list form, critical step missing: survey differing number columns, joined long-form, tidy data frame. Let’s remove nonessential variables, remove survey waves contain variable interest. case, decided : - omit completely waves 1 5, none key variable Parliamentary Election Evaluation; - omit date interview missing waves (rounds) 2 4.","code":"to_harmonize_elections <- arabbarometer_metadata %>%   filter( .data$var_name_orig %in% c(\"rowid\", \"country\",\"date\", \"wt\")|            grepl(\"how would you evaluate the last parliamentary\", .data$label_orig)) %>%   mutate(var_label = var_label_normalize(.data$label_orig)) %>%   mutate(var_label = case_when(     .data$var_name_orig == \"country\" ~ \"Country\",     .data$var_name_orig == \"rowid\"   ~ \"Unique ID AB English\", # in pdf Unique ID AB English     .data$var_name_orig == \"date\"    ~ \"Date_of_interview\",     .data$var_name_orig == \"wt\"      ~ \"Weight\",     TRUE ~ \" Evaluation in the last parliamentary elections\")) %>%   mutate ( var_name = var_label_normalize(.data$var_label) )  set.seed(2021) # Let's see the same random example: sample_n(to_harmonize_elections%>%         select ( all_of(c(\"id\", \"var_name\", \"var_label\"))), 10) #>                  id                                       var_name #> 1  Arab_Barometer_2                           unique_id_ab_english #> 2  Arab_Barometer_1                                        country #> 3  Arab_Barometer_3                                         weight #> 4  Arab_Barometer_2                                         weight #> 5  Arab_Barometer_4 evaluation_in_the_last_parliamentary_elections #> 6  Arab_Barometer_3                                        country #> 7  Arab_Barometer_5                              date_of_interview #> 8  Arab_Barometer_4                                         weight #> 9  Arab_Barometer_4                                        country #> 10 Arab_Barometer_3                           unique_id_ab_english #>                                          var_label #> 1                             Unique ID AB English #> 2                                          Country #> 3                                           Weight #> 4                                           Weight #> 5   Evaluation in the last parliamentary elections #> 6                                          Country #> 7                                Date_of_interview #> 8                                           Weight #> 9                                          Country #> 10                            Unique ID AB English # In the vignette this is pre-loaded. merged_ab_elections <- merge_surveys(   survey_list = arab_waves,    var_harmonization = to_harmonize_elections) document_surveys(merged_ab_elections) #> # A tibble: 5 × 5 #>   id               filename           ncol  nrow object_size #>   <chr>            <chr>             <int> <int>       <dbl> #> 1 Arab_Barometer_5 AB-WaveV-EN.sav       4 26780     2991624 #> 2 Arab_Barometer_1 ABI_English.sav       2  7337      694064 #> 3 Arab_Barometer_2 ABII_English.sav      4 12782     1443896 #> 4 Arab_Barometer_3 ABIII_English.sav     5 14809     1790104 #> 5 Arab_Barometer_4 ABIV_English.sav      4  9000     1017088 lapply (merged_ab_elections, names) #> [[1]] #> [1] \"unique id ab english\" \"country\"              \"weight\"               #> [4] \"date_of_interview\"    #>  #> [[2]] #> [1] \"unique id ab english\" \"country\"              #>  #> [[3]] #> [1] \"unique id ab english\"                           #> [2] \"country\"                                        #> [3] \"evaluation in the last parliamentary elections\" #> [4] \"weight\"                                         #>  #> [[4]] #> [1] \"unique id ab english\"                           #> [2] \"country\"                                        #> [3] \"date_of_interview\"                              #> [4] \"weight\"                                         #> [5] \"evaluation in the last parliamentary elections\" #>  #> [[5]] #> [1] \"unique id ab english\"                           #> [2] \"country\"                                        #> [3] \"weight\"                                         #> [4] \"evaluation in the last parliamentary elections\" library(snakecase) merged_ab_elections  <- lapply(   merged_ab_elections,    FUN = function(df) df %>%                        rename_all(snakecase::to_snake_case)   ) lapply(merged_ab_elections, names) #> [[1]] #> [1] \"unique_id_ab_english\" \"country\"              \"weight\"               #> [4] \"date_of_interview\"    #>  #> [[2]] #> [1] \"unique_id_ab_english\" \"country\"              #>  #> [[3]] #> [1] \"unique_id_ab_english\"                           #> [2] \"country\"                                        #> [3] \"evaluation_in_the_last_parliamentary_elections\" #> [4] \"weight\"                                         #>  #> [[4]] #> [1] \"unique_id_ab_english\"                           #> [2] \"country\"                                        #> [3] \"date_of_interview\"                              #> [4] \"weight\"                                         #> [5] \"evaluation_in_the_last_parliamentary_elections\" #>  #> [[5]] #> [1] \"unique_id_ab_english\"                           #> [2] \"country\"                                        #> [3] \"weight\"                                         #> [4] \"evaluation_in_the_last_parliamentary_elections\" ab_elections <- merged_ab_elections[-c(1,2)] lapply ( ab_elections, function(x)  attributes(x)$id ) #> [[1]] #> [1] \"Arab_Barometer_2\" #>  #> [[2]] #> [1] \"Arab_Barometer_3\" #>  #> [[3]] #> [1] \"Arab_Barometer_4\" ab_elections <- lapply(ab_elections, function(x){   if (\"date_of_interview\" %in% names(x)){     subset(x, select = -c(date_of_interview))   } else{     subset(x)   } }) document_surveys(ab_elections) #> # A tibble: 3 × 5 #>   id               filename           ncol  nrow object_size #>   <chr>            <chr>             <int> <int>       <dbl> #> 1 Arab_Barometer_2 ABII_English.sav      4 12782     1443896 #> 2 Arab_Barometer_3 ABIII_English.sav     4 14809     1670608 #> 3 Arab_Barometer_4 ABIV_English.sav      4  9000     1017088"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"variable-label-harmonization","dir":"Articles","previous_headings":"Retrospective Survey Harmonization","what":"Variable Label Harmonization","title":"Case Study: Working With Arab Barometer Surveys","text":"R language uses special NA values missing values. differently encoded SPSS, various survey programs unfortunately always consistently used. Compared Eurobarometer Afrobarometer use cases, Arab Barometer needs particularly lot harmonization, - published Arab Barometer files contain either missing range, explicitly stated missing cases, values refer various missing cases mixed valid values; - missing cases, like valid cases, labelled inconsistently. variable label harmonization therefore takes two steps: carefully labelling removing missing cases valid range, harmonizing valid value labels. Arabbarometer’s SPSS files use various missing value categories, must carefully harmonize , . entire value range following: example, Refuse Decline answer (read) categories interviewee refused form opinion. different case Missing: Saudi Arabia, parliamentary elections, therefore question asked interviewees country. question interest evaluate last parliamentary election? described closed form survey questions answers predetermined respondents chose one answer options. question four-point ordinal scales, therefore, data best analyzed ordinal representation assume equidistant values (.e., factors.) created following retrospective labelling coding: Answer 1 corresponding free_and_fair (highest democratic election process). Answer 2 corresponding some_minor_problems. Answer 3 corresponding some_major_problems. Answer 4 corresponding not_free(lowest democratic election process). use three types missing value categories: know, Declined Missing. harmonization function harmonize_values() prototype function. call directly, instead create harmonize_arabb_eval() avoid complicated parameterization. problem numeric codes used evaluation question, also country names. Beware apply election evaluation code table country names! bit work country variable, , variable missing cases, instead creating labelling, convert factors cleaning. show examples labelling issues: forget imported surveys use special vector class contain metadata information saved SPSS files. base R .character .factor methods avoided, understand SPSS labels. Use as_character() as_factor methods clean country names. use harmonize_values(),` , lot work, lot country labels present. retain factor representation country names, without keeping labelling history. Let’s see work ! see missing weight, impute 1 particular value, can use weighted averaging numerical representation data.","code":"collect_val_labels(   to_harmonize_elections %>%       filter(grepl(\"evaluation in the last parliamentary elections\",                    .data$var_name))   ) #> character(0) harmonize_arabb_eval <- function(x){   label_list <- list(     from = c(\"(\\\\d\\\\.\\\\s)?(\\\\w+\\\\s\\\\w+\\\\s)?([c|C]ompletely free and fair)\",              \"(.+)(but)?\\\\s?(with)\\\\s(some)?\\\\s{0,}(minor\\\\s\\\\w+)\",              \"(.+)(but)?\\\\s?(with)\\\\s(some)?\\\\s{0,}(major\\\\s\\\\w+)\",              \"(.+)?([n|N]ot\\\\sfree\\\\s\\\\w+\\\\s\\\\w+)\",              \"((\\\\d.\\\\s{0,})?\\\\si\\\\s)?([d|D]on.t\\\\sknow)(\\\\s\\\\(Do\\\\snot\\\\sread\\\\))?\",               \"[R|r]efuse\",               \"(\\\\d.\\\\s)?[d|D]ecline[d]?(\\\\s\\\\w+\\\\s\\\\w+)(\\\\s.Do not read.)?\",              \"(\\\\d.\\\\s)?[m|M]issing\"),     to = c(\"free_and_fair\",             \"some_minor_problems\",            \"some_major_problems\",            \"not_free\",            \"do_not_know\",\"declined\",\"declined\",\"missing\"),     numeric_values = c(3,2,1,0,99997,99998,99998,99999))   harmonize_values(x, harmonize_labels = label_list,                     na_values = c(\"do_not_know\"= 99997,                                  \"declined\"=99998,                                  \"missing\"=99999                    )) } harmonized_evaluations <- harmonize_surveys(    survey_list = lapply ( ab_elections, function(x) x %>%                       select (-.data$country)),    .f =harmonize_arabb_eval ) country_labels <- collect_val_labels (to_harmonize_elections %>%                        filter (.data$var_name == \"country\"))   country_labels[grepl(\"lgeria|orocco|oman\" , country_labels)] #> [1] \"Algeria\"     \"Morocco\"     \"algeria\"     \"morocco\"     \"1. Algeria\"  #> [6] \"13. morocco\" \"14. oman\" normalize_country_names <- function(x) {    x <- trimws(gsub(\"\\\\d{1,}\\\\.\\\\s?\",\"\", tolower(as_character(x))), which = \"both\")   as_factor(snakecase::to_title_case(x))} harmonize_countries <- lapply (   X = ab_elections, function(x) { x %>%        select ( -.data$evaluation_in_the_last_parliamentary_elections) }                                 ) harmonized_countries <- lapply ( harmonize_countries, function(x) x %>%                 mutate ( country = normalize_country_names(.data$country)) %>%                 select (-any_of(\"date_of_interview\")))  harmonized_countries <- do.call (rbind, harmonized_countries) summary(harmonized_countries) #>  unique_id_ab_english      country          weight         #>  Length:36591         Jordan   : 4483   Min.   : 0.02837   #>  Class :character     Lebanon  : 4087   1st Qu.: 0.70908   #>  Mode  :character     Algeria  : 3636   Median : 0.96349   #>                       Egypt    : 3615   Mean   : 0.99928   #>                       Palestine: 3600   3rd Qu.: 1.17818   #>                       Tunisia  : 3595   Max.   :16.48268   #>                       (Other)  :13575   NA's   :1 summary(harmonized_evaluations) #>  Evaluation in the last parliamentary elections #> Numeric values without coding: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>     0.0     0.0     2.0   318.3     3.0 99999.0    2004  #> Numeric representation: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   0.000   0.000   2.000   6.067   3.000  99.000    2112  #> Factor representation: #>  unique_id_ab_english     weight         #>  Length:36591         Min.   : 0.02837   #>  Class :character     1st Qu.: 0.70908   #>  Mode  :character     Median : 0.96349   #>                       Mean   : 0.99928   #>                       3rd Qu.: 1.17818   #>                       Max.   :16.48268   #>                       NA's   :1          #>                                          #>                                          #>                                          #>                                          #>                                          #>  evaluation_in_the_last_parliamentary_elections #>  not_free           :9453                       #>  some_major_problems:7434                       #>  some_minor_problems:8141                       #>  free_and_fair      :4337                       #>  8                  :3550                       #>  9                  : 104                       #>  98                 :1404                       #>  99                 :  56                       #>  do_not_know        :   0                       #>  declined           : 102                       #>  missing            :   6                       #>  NA's               :2004 harmonized_ab_dataset <- harmonized_countries  %>%   left_join(harmonized_evaluations, by = c(\"unique_id_ab_english\", \"weight\") ) %>%   rename ( eval_parl = .data$evaluation_in_the_last_parliamentary_elections) %>%   mutate (      wave = as_factor(gsub(\".*(\\\\b[A-Z0-9]+).*\", \"\\\\1\", .data$unique_id_ab_english)),     weight     = ifelse(is.na(.data$weight), 1, .data$weight),      eval_parl = as_factor(.data$eval_parl),      country   = as_factor(.data$country))   summary(harmonized_ab_dataset) #>  unique_id_ab_english      country          weight         #>  Length:36591         Jordan   : 4483   Min.   : 0.02837   #>  Class :character     Lebanon  : 4087   1st Qu.: 0.70908   #>  Mode  :character     Algeria  : 3636   Median : 0.96349   #>                       Egypt    : 3615   Mean   : 0.99928   #>                       Palestine: 3600   3rd Qu.: 1.17818   #>                       Tunisia  : 3595   Max.   :16.48268   #>                       (Other)  :13575                      #>                eval_parl       wave       #>  not_free           :9453   ABII :12782   #>  some_minor_problems:8141   ABIII:14809   #>  some_major_problems:7434   ABIV : 9000   #>  free_and_fair      :4337                 #>  8                  :3550                 #>  (Other)            :1672                 #>  NA's               :2004"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"categorical-and-numeric-coding","dir":"Articles","previous_headings":"Retrospective Survey Harmonization","what":"Categorical And Numeric Coding","title":"Case Study: Working With Arab Barometer Surveys","text":"labeled survey data stored labelled_spss_survey() vectors, complex class retains metadata reproducibility, statistical packages work numeric categorical (factor) data. data can converted , use methods labelled_spss_survey() purpose, .e., as_numeric() as_factor(). (See fall back generic .factor() .numeric() methods labelled_spss_survey class vignette.) Due categorical format question MENA parliamentary election evaluation Arab Barometer survey rounds, decided present election variable categorical format. show unweighted tallies evaluation category, weighted sum, rounded number category counts multiplied respondent’s post-stratification weight. output shown table indicates number valuations given interviewees election evaluation question, country survey wave. table (print part), assign numeric values evaluation categories. recall simple coding: - 3 = Free fair - 2 = minor problems - 1 = major problems - 0 = free. numeric summary show weighted average valuations unweighted, typical values. correspond highest tallies categorical (unweighted) counts.   release harmonized datasets code tutorial review potential corrections.","code":"categorical_summary <- harmonized_ab_dataset %>%   select ( -all_of(c(\"unique_id_ab_english\")) )  %>%   group_by ( .data$country, .data$wave, .data$eval_parl ) %>%   summarize (n        = n(),              weighted = round(n*weight, 0)              ) %>%   ungroup() set.seed(2021) categorical_summary %>% sample_n(12)  #> # A tibble: 12 × 5 #>    country wave  eval_parl               n weighted #>    <fct>   <fct> <fct>               <int>    <dbl> #>  1 Sudan   ABIII not_free              360      176 #>  2 Lebanon ABIV  some_minor_problems   412      540 #>  3 Lebanon ABIII free_and_fair         210      264 #>  4 Morocco ABIV  some_minor_problems   386      333 #>  5 Lebanon ABIV  some_minor_problems   412      388 #>  6 Lebanon ABII  some_major_problems   342      259 #>  7 Lebanon ABIII not_free              272      268 #>  8 Tunisia ABIV  some_minor_problems   408      327 #>  9 Algeria ABII  8                     407      326 #> 10 Morocco ABIII some_minor_problems   328      362 #> 11 Jordan  ABIII free_and_fair         240      345 #> 12 Sudan   ABIII not_free              360      439 numeric_summary <- harmonized_ab_dataset %>%   select ( -all_of(c(\"unique_id_ab_english\")) )  %>%   mutate ( eval_parl = as_numeric(.data$eval_parl)) %>%   group_by ( .data$country, .data$wave ) %>%   summarize (     mean   = weighted.mean(.data$eval_parl, w = .data$weight),     median = median(.data$eval_parl)   ) %>%   ungroup()  #> `summarise()` has grouped output by 'country'. You can override using the `.groups` argument. set.seed(2021) numeric_summary %>% sample_n(12)  #> # A tibble: 12 × 4 #>    country wave   mean median #>    <fct>   <fct> <dbl>  <dbl> #>  1 Iraq    ABII   2.83      3 #>  2 Egypt   ABIV   2.92      2 #>  3 Lebanon ABIV  NA        NA #>  4 Kuwait  ABIII  2.88      3 #>  5 Morocco ABIV   4.10      3 #>  6 Lebanon ABII   2.65      3 #>  7 Sudan   ABIII  2.72      3 #>  8 Morocco ABIII  2.82      3 #>  9 Tunisia ABIII  2.63      2 #> 10 Tunisia ABII   1.48      1 #> 11 Libya   ABIII  2.60      2 #> 12 Egypt   ABIII  2.72      2 knitr::include_graphics(   here('vignettes', 'arabb-comparison-chart.png') ) knitr::include_graphics(   here('vignettes', 'arabb-comparison-country-chart.png') )"},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"replication-data","dir":"Articles","previous_headings":"Replication Data, Citations and Related work","what":"Replication Data","title":"Case Study: Working With Arab Barometer Surveys","text":"used datafiles metadata tables, harmonized tables large hosted released R package. deposited results review potential improvements Zenodo. comments corrections welcome. Daniel Antal, & Ahmed Shaibani. (2021). Replication Data retroharmonize R Package Case Study: Working Arab Barometer Surveys (Version 0.1.6) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.5034741","code":"harmonized_ab_data <- harmonized_ab_dataset %>%    rename ( id = .data$unique_id_ab_english ) %>%   mutate (eval_parl_num = as_numeric(.data$eval_parl),            eval_parl_cat = as_factor(.data$eval_parl)) %>%   select (all_of(c(\"id\", \"country\", \"eval_parl_num\", \"eval_parl_cat\", \"wave\"))) haven::write_sav(data = harmonized_ab_data,                   here(\"data-raw\", \"arabb\", \"harmonized_arabb_waves.sav\")) write.csv(harmonized_ab_data,             here(\"data-raw\", \"arabb\", \"harmonized_arabb_waves.csv\"),            row.names=FALSE) write.csv(categorical_summary,            here(\"data-raw\", \"arabb\",  \"arabb_categorical_summary.csv\"),            row.names=FALSE) write.csv(numeric_summary,            here(\"data-raw\", \"arabb\", \"arabb_numeric_summary.csv\"),            row.names=FALSE)  # The metadata file contains list objects, which cannot be represented # in a flat csv file format. saveRDS(arabbarometer_metadata,           here(\"data-raw\", \"arabb\", \"arabbarometer_metadata.rds\")         )  ## The lists of value labels are dropped from the csv output. write.csv(arabbarometer_metadata [   , -which (sapply ( arabbarometer_metadata, class) == \"list\")],     here(\"data-raw\", \"arabb\",\"arabb_metadata_simplified.csv\"), row.names=FALSE)"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"citing-the-data-sources","dir":"Articles","previous_headings":"Replication Data, Citations and Related work","what":"Citing the data sources","title":"Case Study: Working With Arab Barometer Surveys","text":"Arab Barometer data: cite Arab Barometer.","code":""},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"citing-the-retroharmonize-r-package","dir":"Articles","previous_headings":"Replication Data, Citations and Related work","what":"Citing the retroharmonize R package","title":"Case Study: Working With Arab Barometer Surveys","text":"main developer contributors, see package homepage. work can freely used, modified distributed GPL-3 license:","code":"citation(\"retroharmonize\") #>  #> To cite package 'retroharmonize' in publications use: #>  #>   Daniel Antal (2021). retroharmonize: Ex Post Survey Data #>   Harmonization. https://retroharmonize.dataobservatory.eu/, #>   https://github.com/rOpenGov/retroharmonize. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {retroharmonize: Ex Post Survey Data Harmonization}, #>     author = {Daniel Antal}, #>     year = {2021}, #>     note = {https://retroharmonize.dataobservatory.eu/, #> https://github.com/rOpenGov/retroharmonize}, #>   }"},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"contact","dir":"Articles","previous_headings":"Replication Data, Citations and Related work","what":"Contact","title":"Case Study: Working With Arab Barometer Surveys","text":"contact information, see package homepage.","code":""},{"path":"https://ropengov.github.io/retroharmonize/articles/arabbarometer.html","id":"version-info","dir":"Articles","previous_headings":"Replication Data, Citations and Related work","what":"Version info","title":"Case Study: Working With Arab Barometer Surveys","text":"Daniel Antal, & Ahmed Shaibani. (2021, June 26). Case Study: Working Arab Barometer Surveys retroharmonize R package (Version 0.1.6). Zenodo. https://doi.org/10.5281/zenodo.5034759 tutorial created following environment, can downloaded PDF format 10.5281/zenodo.5034759:","code":"sessionInfo() #> R version 4.1.2 (2021-11-01) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] snakecase_0.11.0     knitr_1.36           ggplot2_3.3.5        #> [4] tidyr_1.1.4          dplyr_1.0.7          retroharmonize_0.2.2 #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.1.1         xfun_0.28                bslib_0.3.1              #>  [4] purrr_0.3.4              haven_2.4.3              labelled_2.9.0           #>  [7] colorspace_2.0-2         vctrs_0.3.8              generics_0.1.1           #> [10] htmltools_0.5.2          yaml_2.2.1               utf8_1.2.2               #> [13] rlang_0.4.12             pkgdown_1.9000.9000.9000 jquerylib_0.1.4          #> [16] pillar_1.6.4             glue_1.5.0               withr_2.4.2              #> [19] lifecycle_1.0.1          stringr_1.4.0            munsell_0.5.0            #> [22] gtable_0.3.0             ragg_1.2.0               memoise_2.0.0            #> [25] evaluate_0.14            forcats_0.5.1            fastmap_1.1.0            #> [28] fansi_0.5.0              highr_0.9                scales_1.1.1             #> [31] cachem_1.0.6             desc_1.4.0               jsonlite_1.7.2           #> [34] systemfonts_1.0.3        fs_1.5.0                 textshaping_0.3.6        #> [37] hms_1.1.1                png_0.1-7                digest_0.6.28            #> [40] stringi_1.7.5            rprojroot_2.0.2          grid_4.1.2               #> [43] cli_3.1.0                here_1.0.1               tools_4.1.2              #> [46] magrittr_2.0.1           sass_0.4.0               tibble_3.1.6             #> [49] crayon_1.4.2             pkgconfig_2.0.3          ellipsis_0.3.2           #> [52] assertthat_0.2.1         rmarkdown_2.11           R6_2.5.1                 #> [55] compiler_4.1.2"},{"path":"https://ropengov.github.io/retroharmonize/articles/eurobarometer.html","id":"metadata-map","dir":"Articles","previous_headings":"","what":"Metadata map","title":"Case Study: Working with Eurobarometer surveys","text":"start extracting metadata survey data files storing tidy table, row contains information variable survey data file. keep size manageable, keep variables: row ID, weighting variable, country code, variables contain “parliament” “commission” labels. value labels example numerous. variable stands one Can rely rely labels. following labels marked GESIS missing values: created helper function subset_save_survey() programmatically reads SPSS files, makes necessary type conversion labelled_spss_survey() without harmonization, saves small, subsetted rds file. native R file, far efficient handle actual workflow.","code":"eb_trust_metadata <- lapply ( X = eb_waves, FUN = metadata_create ) eb_trust_metadata <- do.call(rbind, eb_trust_metadata) #let's keep the example manageable: eb_trust_metadata  <- eb_trust_metadata %>%   filter ( grepl(\"parliament|commission|rowid|weight_poststrat|country_id\", var_name_orig) ) head(eb_trust_metadata) #>           filename           id             var_name_orig #> 1 ZA2828_trust.rds ZA2828_trust                     rowid #> 2 ZA2828_trust.rds ZA2828_trust                country_id #> 3 ZA2828_trust.rds ZA2828_trust          weight_poststrat #> 4 ZA2828_trust.rds ZA2828_trust trust_european_commission #> 5 ZA2828_trust.rds ZA2828_trust trust_european_parliament #> 6 ZA2828_trust.rds ZA2828_trust trust_national_parliament #>                            class_orig #> 1                           character #> 2                           character #> 3                             numeric #> 4 retroharmonize_labelled_spss_survey #> 5 retroharmonize_labelled_spss_survey #> 6 retroharmonize_labelled_spss_survey #>                                             label_orig  labels valid_labels #> 1                    unique identifier in za2828_trust      NA           NA #> 2 nation all samples iso 3166 crosstabulation variable      NA           NA #> 3                            weight result from target      NA           NA #> 4                          rely on european commission 1, 2, 3         1, 2 #> 5                          rely on european parliament 1, 2, 3         1, 2 #> 6                          rely on national parliament 1, 2, 3         1, 2 #>   na_labels na_range n_labels n_valid_labels n_na_labels #> 1        NA       NA        0              0           0 #> 2        NA       NA        0              0           0 #> 3        NA       NA        0              0           0 #> 4         3       NA        3              2           1 #> 5         3       NA        3              2           1 #> 6         3       NA        3              2           1 collect_val_labels(eb_trust_metadata) #> [1] \"CAN RELY ON IT\"    \"CANNOT RELY ON IT\" \"Tend to trust\"     #> [4] \"Tend not to trust\" \"DK\" collect_na_labels(eb_trust_metadata) #> [1] \"DK\"                         \"NA\"                         #> [3] \"Inap. (33 in V6)\"           \"Inap. (CY-TCC in isocntry)\" ## You will likely use your own local working directory, or ## tempdir() that will create a temporary directory for your  ## session only.  working_directory <- tempdir() # This code is for illustration only, it is not evaluated. # To replicate the worklist, you need to have the SPSS file names  # as a list, and you have to set up your own import and export path.  selected_eb_metadata <- readRDS(   system.file(\"eurob\", \"selected_eb_waves.rds\", package = \"retroharmonize\")   ) %>%   mutate ( id = substr(filename,1,6) ) %>%   rename ( var_label = var_label_std ) %>%   mutate ( var_name = var_label )  ## This code is not evaluated, it is only an example. You are likely  ## to have a directory where you have already downloaded the data ## from GESIS after accepting their term use.  subset_save_surveys (    var_harmonization = selected_eb_metadata,    selection_name = \"trust\",   import_path = gesis_dir,    export_path = working_directory )"},{"path":"https://ropengov.github.io/retroharmonize/articles/eurobarometer.html","id":"harmonize-the-labels","dir":"Articles","previous_headings":"","what":"Harmonize the labels","title":"Case Study: Working with Eurobarometer surveys","text":"easier looping adopt harmonize_values() function new default settings. tempting preserve rely labels distinct trust labels, use numeric coding, lead confusion. want keep difference two type category labels, harmonization done two-step process. Let’s see things work fine: review harmonization single survey use pull_survey(). running adapted harmonization function, : performing harmonization, look like : satisfied results, run harmonize_eb_trust() 9 survey waves. Whenever variable missing wave, filled inapproriate missing values.","code":"harmonize_eb_trust <- function(x) {   label_list <- list(     from = c(\"^tend\\\\snot\", \"^cannot\", \"^tend\\\\sto\", \"^can\\\\srely\",              \"^dk\", \"^inap\", \"na\"),      to = c(\"not_trust\", \"not_trust\", \"trust\", \"trust\",            \"do_not_know\", \"inap\", \"inap\"),      numeric_values = c(0,0,1,1, 99997,99999,99999)   )    harmonize_values(x,                     harmonize_labels = label_list,                     na_values = c(\"do_not_know\"= 99997,                                  \"declined\"   = 99998,                                  \"inap\"       = 99999 )   ) } document_surveys(eb_waves) #> # A tibble: 9 × 5 #>   id           filename          ncol  nrow object_size #>   <chr>        <chr>            <int> <int>       <dbl> #> 1 ZA2828_trust ZA2828_trust.rds     7 65178     8881288 #> 2 ZA3171_trust ZA3171_trust.rds    14 16179     3150696 #> 3 ZA3639_trust ZA3639_trust.rds    14 16012     3116544 #> 4 ZA4414_trust ZA4414_trust.rds    14 29430     5693504 #> 5 ZA4744_trust ZA4744_trust.rds    14 30170     5833760 #> 6 ZA5481_trust ZA5481_trust.rds    10 31769     5109472 #> 7 ZA5913_trust ZA5913_trust.rds    10 27932     4494592 #> 8 ZA6863_trust ZA6863_trust.rds    14 33180     6411712 #> 9 ZA7562_trust ZA7562_trust.rds     8 27524     3980296 test_trust <- pull_survey(eb_waves, filename = \"ZA4414_trust.rds\") test_trust$trust_european_commission[1:16] #>  [1] 3 1 2 3 1 2 2 2 1 3 1 1 1 1 1 1 #> attr(,\"labels\") #>     Tend to trust Tend not to trust                DK  #>                 1                 2                 3  #> attr(,\"label\") #> [1] \"QA27 EUROPEAN COMMISSION - TRUST\" #> attr(,\"na_values\") #> [1] 3 #> attr(,\"ZA4414_name\") #> [1] \"v213\" #> attr(,\"ZA4414_values\") #> 1 2 3  #> 1 2 3  #> attr(,\"ZA4414_label\") #> [1] \"QA27 EUROPEAN COMMISSION - TRUST\" #> attr(,\"ZA4414_labels\") #>     Tend to trust Tend not to trust                DK  #>                 1                 2                 3  #> attr(,\"ZA4414_na_values\") #> [1] 3 #> attr(,\"id\") #> [1] \"ZA4414\" #> attr(,\"class\") #> [1] \"retroharmonize_labelled_spss_survey\" \"haven_labelled_spss\"                 #> [3] \"haven_labelled\" harmonize_eb_trust(x=test_trust$trust_european_commission[1:16]) #>  [1] 99997     1     0 99997     1     0     0     0     1 99997     1     1 #> [13]     1     1     1     1 #> attr(,\"labels\") #>   not_trust       trust do_not_know    declined        inap  #>           0           1       99997       99998       99999  #> attr(,\"label\") #> [1] \"QA27 EUROPEAN COMMISSION - TRUST\" #> attr(,\"na_values\") #> [1] 99997 99998 99999 #> attr(,\"class\") #> [1] \"retroharmonize_labelled_spss_survey\" \"haven_labelled_spss\"                 #> [3] \"haven_labelled\"                      #> attr(,\"survey_id_name\") #> [1] \"x\" #> attr(,\"survey_id_values\") #>     2     1     3  #>     0     1 99997  #> attr(,\"survey_id_label\") #> [1] \"QA27 EUROPEAN COMMISSION - TRUST\" #> attr(,\"survey_id_labels\") #>     Tend to trust Tend not to trust                DK  #>                 1                 2                 3  #> attr(,\"survey_id_na_values\") #> [1] 3 #> attr(,\"id\") #> [1] \"survey_id\""},{"path":"https://ropengov.github.io/retroharmonize/articles/eurobarometer.html","id":"harmonize-waves","dir":"Articles","previous_headings":"","what":"Harmonize waves","title":"Case Study: Working with Eurobarometer surveys","text":"define selection countries: Belgium, Hungary, Italy, Malta, Netherlands, Poland, Slovakia, variables. rely document_surveys() anymore, result single data frame. Let’s look descriptive metadata.","code":"eb_waves_selected <- lapply ( eb_waves, function(x) x %>% select (    any_of (c(\"rowid\", \"country_id\", \"weight_poststrat\",              \"trust_national_parliament\", \"trust_european_commission\",              \"trust_european_parliament\"))) %>%     filter ( country_id %in% c(\"NL\", \"PL\", \"HU\", \"SK\", \"BE\",                                 \"MT\", \"IT\"))) harmonized_eb_waves <- harmonize_surveys (    waves = eb_waves_selected,    .f = harmonize_eb_trust ) wave_attributes <- attributes(harmonized_eb_waves) wave_attributes$id #> [1] \"Waves: ZA2828_trust; ZA3171_trust; ZA3639_trust; ZA4414_trust; ZA4744_trust; ZA5481_trust; ZA5913_trust; ZA6863_trust; ZA7562_trust\" wave_attributes$filename #> [1] \"Original files: ZA2828_trust.rds; ZA3171_trust.rds; ZA3639_trust.rds; ZA4414_trust.rds; ZA4744_trust.rds; ZA5481_trust.rds; ZA5913_trust.rds; ZA6863_trust.rds; ZA7562_trust.rds\" wave_attributes$names #> [1] \"rowid\"                     \"country_id\"                #> [3] \"weight_poststrat\"          \"trust_national_parliament\" #> [5] \"trust_european_commission\" \"trust_european_parliament\""},{"path":"https://ropengov.github.io/retroharmonize/articles/eurobarometer.html","id":"analyze-the-data","dir":"Articles","previous_headings":"","what":"Analyze the data","title":"Case Study: Working with Eurobarometer surveys","text":"harmonized data can analyzed R. labelled survey data stored labelled_spss_survey() vectors, complex class retains much metadata reproducibility. statistical R packages know . , data presented either numeric data as_numeric() categorical as_factor(). (See fall back generic .factor() .numeric() methods labelled_spss_survey class vignette.) First, let’s treat trust variables factors. summary resulting data allows us screen values outside expected range. trust variables, values “trust” “trust” defined missing, unacceptable. example, case. example, case. also see basic information weighting factors, selected Eurobarometer subset range 0.01 almost 7. range values pretty large, needs taken account analyzing data. Now convert trust variables numeric format, look summary. Following conversion, lost information type missing values - now lumped together NA. gained proportion positive responses (ranges 0.41 trust national parliament 0.63 trust European Parliament), ability , e.g., construct scales binary variables. Finally, let’s calculate weighted means trust national parliament, European Parliament, European Commission, selected countries, across EB waves.","code":"harmonized_eb_waves %>%   mutate_at ( vars(contains(\"trust\")), as_factor ) %>%   summary() #>     rowid            country_id        weight_poststrat #>  Length:58917       Length:58917       Min.   :0.0095   #>  Class :character   Class :character   1st Qu.:0.7290   #>  Mode  :character   Mode  :character   Median :0.9315   #>                                        Mean   :1.0000   #>                                        3rd Qu.:1.1908   #>                                        Max.   :6.9678   #>  trust_national_parliament trust_european_commission trust_european_parliament #>  not_trust  :31432         not_trust  :15696         not_trust  :16109         #>  trust      :22210         trust      :26451         trust      :27701         #>  do_not_know: 5269         do_not_know:10132         do_not_know: 8468         #>  declined   :    0         declined   :    0         declined   :    0         #>  inap       :    6         inap       : 6638         inap       : 6639         #> numeric_harmonization <- harmonized_eb_waves %>%   mutate_at ( vars(contains(\"trust\")), as_numeric ) summary(numeric_harmonization) #>     rowid            country_id        weight_poststrat #>  Length:58917       Length:58917       Min.   :0.0095   #>  Class :character   Class :character   1st Qu.:0.7290   #>  Mode  :character   Mode  :character   Median :0.9315   #>                                        Mean   :1.0000   #>                                        3rd Qu.:1.1908   #>                                        Max.   :6.9678   #>                                                         #>  trust_national_parliament trust_european_commission trust_european_parliament #>  Min.   :0.000             Min.   :0.000             Min.   :0.000             #>  1st Qu.:0.000             1st Qu.:0.000             1st Qu.:0.000             #>  Median :0.000             Median :1.000             Median :1.000             #>  Mean   :0.414             Mean   :0.628             Mean   :0.632             #>  3rd Qu.:1.000             3rd Qu.:1.000             3rd Qu.:1.000             #>  Max.   :1.000             Max.   :1.000             Max.   :1.000             #>  NA's   :5275              NA's   :16770             NA's   :15107 numeric_harmonization %>%   group_by(country_id) %>%   summarize_at ( vars(contains(\"trust\")),                   list(~mean(.*weight_poststrat, na.rm=TRUE)))  #> # A tibble: 7 × 4 #>   country_id trust_national_parliament trust_european_comm… trust_european_parl… #>   <chr>                          <dbl>                <dbl>                <dbl> #> 1 BE                             0.453                0.610                0.623 #> 2 HU                             0.328                0.639                0.642 #> 3 IT                             0.317                0.603                0.630 #> 4 MT                             0.568                0.753                0.754 #> 5 NL                             0.657                0.664                0.635 #> 6 PL                             0.225                0.658                0.642 #> 7 SK                             0.294                0.613                0.641"},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"harmonize-value-codes-and-labels","dir":"Articles","previous_headings":"","what":"Harmonize value codes and labels","title":"Harmonize Value Labels","text":"function harmonize_values() solves problems following situations: data read SPSS file, one dataset variable survey1$trust user-defined missing values, another dataset variable survey2$trust missing values defined. two variables combined. add harmonized missing values missing value range, even present among observations. labels matching survey1$trust survey2$trust. harmonize labels, record initial values reproducibility. missing value ranges survey1$trust survey2$trust match. harmonize missing values, record initial values reproducibility. unexpected labels present range substantive missing values. taken value range special code marked special label.","code":""},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"scenario-1","dir":"Articles","previous_headings":"Harmonize value codes and labels","what":"Scenario 1","title":"Harmonize Value Labels","text":"values present, missing values recoded. attribute survey1_values may used restore original coding. attribute survey1_labels may used restore original labelling. attribute na_values can re-define category treated missing. to_numeric() method converts missing value range NA_real_.","code":"v1 <- labelled_spss_survey (   c(1,0,1,9),    labels = c(\"yes\" =1,              \"no\" = 0,              \"inap\" = 9),   na_values = 9)  h1 <- harmonize_values(   x = v1,    harmonize_labels = list(     from = c(\"^yes\", \"^no\", \"^inap\"),      to = c(\"trust\", \"not_trust\", \"inap\"),      numeric_values = c(1,0,99999)),    id = \"survey1\")  str(h1) #>  'retroharmonize_labelled_spss_survey' num [1:4]     1     0     1 99999 #>  - attr(*, \"labels\")= Named num [1:5] 0 1 99997 99998 99999 #>   ..- attr(*, \"names\")= chr [1:5] \"not_trust\" \"trust\" \"do_not_know\" \"declined\" ... #>  - attr(*, \"label\")= chr \"v1\" #>  - attr(*, \"na_values\")= num [1:3] 99997 99998 99999 #>  - attr(*, \"survey1_name\")= chr \"v1\" #>  - attr(*, \"survey1_values\")= Named num [1:3] 0 1 99999 #>   ..- attr(*, \"names\")= chr [1:3] \"0\" \"1\" \"9\" #>  - attr(*, \"survey1_label\")= chr \"v1\" #>  - attr(*, \"survey1_labels\")= Named num [1:3] 1 0 9 #>   ..- attr(*, \"names\")= chr [1:3] \"yes\" \"no\" \"inap\" #>  - attr(*, \"survey1_na_values\")= num 9 #>  - attr(*, \"id\")= chr \"survey1\""},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"scenario-2","dir":"Articles","previous_headings":"Harmonize value codes and labels","what":"Scenario 2","title":"Harmonize Value Labels","text":"original variable class haven::labelled_spss(). invalid missing value. apply code 99901 value label invalid_label. modifying user-defined missing value labels:","code":"v2 <- haven::labelled_spss (   c(1,1,0,8),    labels = c(\"yes\" = 1,              \"no\"  = 0,              \"declined\" = 8),   na_values = 8)  h2 <- harmonize_values(   v2,    harmonize_labels = list(     from = c(\"^yes\", \"^no\", \"^inap\"),      to = c(\"trust\", \"not_trust\", \"inap\"),      numeric_values = c(1,0,99999)),    id = 'survey2' ) str(h2) #>  'retroharmonize_labelled_spss_survey' num [1:4] 1 1 0 8 #>  - attr(*, \"labels\")= Named num [1:5] 0 1 99997 99998 99999 #>   ..- attr(*, \"names\")= chr [1:5] \"not_trust\" \"trust\" \"do_not_know\" \"declined\" ... #>  - attr(*, \"label\")= chr \"v2\" #>  - attr(*, \"na_values\")= num [1:3] 99997 99998 99999 #>  - attr(*, \"survey2_name\")= chr \"v2\" #>  - attr(*, \"survey2_values\")= Named num [1:3] 0 1 8 #>   ..- attr(*, \"names\")= chr [1:3] \"0\" \"1\" \"8\" #>  - attr(*, \"survey2_label\")= chr \"v2\" #>  - attr(*, \"survey2_labels\")= Named num [1:3] 1 0 8 #>   ..- attr(*, \"names\")= chr [1:3] \"yes\" \"no\" \"declined\" #>  - attr(*, \"survey2_na_values\")= num 8 #>  - attr(*, \"id\")= chr \"survey2\" h2b <- harmonize_values(   v2,    harmonize_labels = list(     from = c(\"^yes\", \"^no\", \"^decline\"),      to = c(\"trust\", \"not_trust\", \"inap\"),      numeric_values = c(1,0,99999)),    id = 'survey2' )  str(h2b) #>  'retroharmonize_labelled_spss_survey' num [1:4]     1     1     0 99999 #>  - attr(*, \"labels\")= Named num [1:5] 0 1 99997 99998 99999 #>   ..- attr(*, \"names\")= chr [1:5] \"not_trust\" \"trust\" \"do_not_know\" \"declined\" ... #>  - attr(*, \"label\")= chr \"v2\" #>  - attr(*, \"na_values\")= num [1:3] 99997 99998 99999 #>  - attr(*, \"survey2_name\")= chr \"v2\" #>  - attr(*, \"survey2_values\")= Named num [1:3] 0 1 99999 #>   ..- attr(*, \"names\")= chr [1:3] \"0\" \"1\" \"8\" #>  - attr(*, \"survey2_label\")= chr \"v2\" #>  - attr(*, \"survey2_labels\")= Named num [1:3] 1 0 8 #>   ..- attr(*, \"names\")= chr [1:3] \"yes\" \"no\" \"declined\" #>  - attr(*, \"survey2_na_values\")= num 8 #>  - attr(*, \"id\")= chr \"survey2\""},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"scenario-3","dir":"Articles","previous_headings":"Harmonize value codes and labels","what":"Scenario 3","title":"Harmonize Value Labels","text":"original vector class haven_labelled, therefore defined missing value range. want remove DK value range missing range do_not_know. original vector also unlabelled value (9). believe vector values value label, treat invalid observation.","code":"var3 <- labelled::labelled(   x = c(1,6,2,9,1,1,2),    labels = c(\"Tend to trust\" = 1,               \"Tend not to trust\" = 2,               \"DK\" = 6))  h3 <- harmonize_values(   x = var3,    harmonize_labels = list (      from = c(\"^tend\\\\sto|^trust\",              \"^tend\\\\snot|not\\\\strust\", \"^dk\",              \"^inap\"),      to = c(\"trust\",             \"not_trust\", \"do_not_know\",             \"inap\"),     numeric_values = c(1,0,99997, 99999)   ),    id = \"S3_\")  str(h3) #>  'retroharmonize_labelled_spss_survey' num [1:7]     1 99997     0     9     1     1     0 #>  - attr(*, \"labels\")= Named num [1:5] 0 1 99997 99998 99999 #>   ..- attr(*, \"names\")= chr [1:5] \"not_trust\" \"trust\" \"do_not_know\" \"declined\" ... #>  - attr(*, \"label\")= chr \"var3\" #>  - attr(*, \"S3__name\")= chr \"var3\" #>  - attr(*, \"S3__values\")= Named num [1:4] 0 1 9 99997 #>   ..- attr(*, \"names\")= chr [1:4] \"2\" \"1\" \"9\" \"6\" #>  - attr(*, \"S3__label\")= chr \"var3\" #>  - attr(*, \"S3__labels\")= Named num [1:3] 1 2 6 #>   ..- attr(*, \"names\")= chr [1:3] \"Tend to trust\" \"Tend not to trust\" \"DK\" #>  - attr(*, \"id\")= chr \"S3_\" #>  - attr(*, \"na_values\")= num [1:3] 99997 99998 99999"},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"base-types-summary","dir":"Articles","previous_headings":"Harmonize value codes and labels","what":"Base Types & Summary","title":"Harmonize Value Labels","text":"factor: numeric: character:","code":"summary(as_factor(h3)) #>   not_trust       trust           9 do_not_know    declined        inap  #>           2           3           1           1           0           0 levels(as_factor(h3))  #> [1] \"not_trust\"   \"trust\"       \"9\"           \"do_not_know\" \"declined\"    #> [6] \"inap\" unique(as_factor(h3)) #> [1] trust       do_not_know not_trust   9           #> Levels: not_trust trust 9 do_not_know declined inap summary(as_numeric(h3)) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>    0.00    0.25    1.00    2.00    1.00    9.00       1 unique(as_numeric(h3)) #> [1]  1 NA  0  9 summary(as_character(h3)) #>    Length     Class      Mode  #>         7 character character unique(as_character(h3)) #> [1] \"trust\"       \"do_not_know\" \"not_trust\"   \"9\""},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"combination-of-harmonized-values","dir":"Articles","previous_headings":"","what":"Combination of harmonized values","title":"Harmonize Value Labels","text":"can combine labelled_spss_survey vectors metadata describing current state exact match. means labels, missing values missing range defined way, base type vector matching numeric character — though labelling character vectors makes little sense. historic metadata, .e. earlier naming coding variable match, added “inherited vectors”. single vector, can use concatenate() function, , hood, calls vctrs::vec_c method additional validation.","code":"var1 <- labelled::labelled_spss(   x = c(1,0,1,1,0,8,9),    labels = c(\"TRUST\" = 1,               \"NOT TRUST\" = 0,               \"DON'T KNOW\" = 8,               \"INAP. HERE\" = 9),    na_values = c(8,9))  var2 <- labelled::labelled_spss(   x = c(2,2,8,9,1,1 ),    labels = c(\"Tend to trust\" = 1,               \"Tend not to trust\" = 2,               \"DK\" = 8,               \"Inap\" = 9),    na_values = c(8,9)   )   h1 <- harmonize_values (   x = var1,    harmonize_label = \"Do you trust the European Union?\",   harmonize_labels = list (      from = c(\"^tend\\\\sto|^trust\", \"^tend\\\\snot|not\\\\strust\", \"^dk|^don\", \"^inap\"),      to = c(\"trust\", \"not_trust\", \"do_not_know\", \"inap\"),     numeric_values = c(1,0,99997, 99999)),    na_values = c(\"do_not_know\" = 99997,                 \"inap\" = 99999),    id = \"survey1\"   )  h2 <- harmonize_values (   x = var2,    harmonize_label = \"Do you trust the European Union?\",   harmonize_labels = list (      from = c(\"^tend\\\\sto|^trust\", \"^tend\\\\snot|not\\\\strust\", \"^dk|^don\", \"^inap\"),      to = c(\"trust\", \"not_trust\", \"do_not_know\", \"inap\"),     numeric_values = c(1,0,99997, 99999)),    na_values = c(\"do_not_know\" = 99997,                 \"inap\" = 99999),    id = \"survey2\" ) vctrs::vec_c(h1,h2) #>  [1]     1     0     1     1     0 99997 99999     0     0 99997 99999     1 #> [13]     1 #> attr(,\"labels\") #>   not_trust       trust do_not_know        inap  #>           0           1       99997       99999  #> attr(,\"label\") #> [1] \"Do you trust the European Union?\" #> attr(,\"na_values\") #> [1] 99997 99999 #> attr(,\"multi-wave_name\") #> [1] \"var1, var2\" #> attr(,\"multi-wave_values\") #> named numeric(0) #> attr(,\"multi-wave_label\") #> [1] \"Do you trust the European Union?\" #> attr(,\"multi-wave_labels\") #>   not_trust       trust do_not_know        inap  #>           0           1       99997       99999  #> attr(,\"multi-wave_na_values\") #> [1] 99997 99999 #> attr(,\"id\") #> [1] \"multi-wave\" #> attr(,\"survey1_name\") #> [1] \"var1\" #> attr(,\"survey1_values\") #>     0     1     8     9  #>     0     1 99997 99999  #> attr(,\"survey1_label\") #> [1] \"Do you trust the European Union?\" #> attr(,\"survey1_labels\") #>      TRUST  NOT TRUST DON'T KNOW INAP. HERE  #>          1          0          8          9  #> attr(,\"survey1_na_values\") #> [1] 8 9 #> attr(,\"survey2_name\") #> [1] \"var2\" #> attr(,\"survey2_values\") #>     2     1     8     9  #>     0     1 99997 99999  #> attr(,\"survey2_label\") #> [1] \"Do you trust the European Union?\" #> attr(,\"survey2_labels\") #>     Tend to trust Tend not to trust                DK              Inap  #>                 1                 2                 8                 9  #> attr(,\"survey2_na_values\") #> [1] 8 9 #> attr(,\"class\") #> [1] \"retroharmonize_labelled_spss_survey\" \"haven_labelled_spss\"                 #> [3] \"haven_labelled\""},{"path":"https://ropengov.github.io/retroharmonize/articles/harmonize_labels.html","id":"binding-surveys-together","dir":"Articles","previous_headings":"","what":"Binding surveys together","title":"Harmonize Value Labels","text":"soon compatible variables matching names two data frames, can bind together way history preserved. can vctrs::vec_rbind dplyr::bind_rows(). generic rbind() lose labelling information. dplyr’s join functions may result correct values, metadata get lost. new join method developed.","code":"a <- tibble::tibble ( rowid = paste0(\"survey1\", 1:length(h1)),                       hvar = h1,                        w = runif(n = length(h1), 0,1)) b <- tibble::tibble ( rowid = paste0(\"survey2\", 1:length(h2)),                       hvar  = h2,                        w = runif(n = length(h2), 0,1))  c <- dplyr::bind_rows(a, b) summary(c) #> Do you trust the European Union? #> Numeric values without coding: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>       0       0       1   30769   99997   99999  #> Numeric representation: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>  0.0000  0.0000  1.0000  0.5556  1.0000  1.0000       4  #> Factor representation: #>     rowid                    hvar         w           #>  Length:13          not_trust  :4   Min.   :0.09192   #>  Class :character   trust      :5   1st Qu.:0.15501   #>  Mode  :character   do_not_know:2   Median :0.52732   #>                     inap       :2   Mean   :0.54981   #>                                     3rd Qu.:0.93443   #>                                     Max.   :0.99073 print(c) #> # A tibble: 13 × 3 #>    rowid                        hvar      w #>    <chr>                <retroh_dbl>  <dbl> #>  1 survey11     1 [trust]            0.539  #>  2 survey12     0 [not_trust]        0.104  #>  3 survey13     1 [trust]            0.376  #>  4 survey14     1 [trust]            0.990  #>  5 survey15     0 [not_trust]        0.155  #>  6 survey16 99997 (NA) [do_not_know] 0.527  #>  7 survey17 99999 (NA) [inap]        0.0919 #>  8 survey21     0 [not_trust]        0.934  #>  9 survey22     0 [not_trust]        0.904  #> 10 survey23 99997 (NA) [do_not_know] 0.105  #> 11 survey24 99999 (NA) [inap]        0.987  #> 12 survey25     1 [trust]            0.443  #> 13 survey26     1 [trust]            0.991"},{"path":"https://ropengov.github.io/retroharmonize/articles/labelled_spss_survey.html","id":"coercion-rules-and-type-casting","dir":"Articles","previous_headings":"","what":"Coercion rules and type casting","title":"The labelled_spss_survey class","text":"avoid confusion mis-labelled surveys, coercion double integer vectors result double integer vector. use vctrs::vec_c generally safer base R c(). Conversion character works expected: base .factor converts integer uses integers levels, base R factors integers levels attribute. Conversion factor as_factor converts value labels factor levels: Similarly, converting numeric types, convert user-defined missing values NA values used R language. numerical analysis, convert as_numeric.","code":"#double c(sl1, 1/7) #> [1] 1.0000000 1.0000000 0.0000000 8.0000000 8.0000000 8.0000000 0.1428571 vctrs::vec_c(sl1, 1/7) #> [1] 1.0000000 1.0000000 0.0000000 8.0000000 8.0000000 8.0000000 0.1428571 c(sl1, 1:3) #> [1] 1 1 0 8 8 8 1 2 3 as.character(sl1) #> [1] \"1\" \"1\" \"0\" \"8\" \"8\" \"8\" as.factor(sl1) #> [1] 1 1 0 8 8 8 #> Levels: 0 1 8 as_factor(sl1) #> [1] yes      yes      no       declined declined declined #> Levels: no yes declined as.numeric(sl1) #> [1] 1 1 0 8 8 8 as_numeric(sl1) #> [1]  1  1  0 NA NA NA"},{"path":"https://ropengov.github.io/retroharmonize/articles/labelled_spss_survey.html","id":"arithmetics","dir":"Articles","previous_headings":"","what":"Arithmetics","title":"The labelled_spss_survey class","text":"median value correctly displayed, user-defined missing values removed calculation. arithmetic methods implemented, median() quantile() mean() weighted.mean() - always removes NA values. sum() result conversion numeric can used mathematical / statistical function.","code":"median (as.numeric(sl1)) #> [1] 4.5 median (sl1) #> [1] 4.5 quantile (as.numeric(sl1), 0.9) #> 90%  #>   8 quantile (sl1, 0.9) #> 90%  #>   1 mean (as.numeric(sl1)) #> [1] 4.333333 mean (sl1) #> [1] 4.333333 mean (sl1, na.rm=TRUE) #> [1] 0.6666667 weights1 <- runif (n = 6, min = 0, max = 1) weighted.mean(as.numeric(sl1), weights1) #> [1] 4.429717 weighted.mean(sl1, weights1) #> [1] 4.429717 sum (as.numeric(sl1)) #> [1] 26 sum (sl1, na.rm=TRUE) #> [1] 26 as_numeric(sl1) #> [1]  1  1  0 NA NA NA min ( as_numeric(sl1)) #> [1] NA min ( as_numeric(sl1), na.rm=TRUE) #> [1] 0"},{"path":"https://ropengov.github.io/retroharmonize/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Daniel Antal. Author, maintainer. Marta Kolczynska. Contributor. Pyry Kantanen. Contributor. Diego  Hernangómez Herrero. Contributor.","code":""},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"retroharmonize-","dir":"","previous_headings":"","what":"Ex Post Survey Data Harmonization","title":"Ex Post Survey Data Harmonization","text":"goal retroharmonize facilitate retrospective (ex-post) harmonization survey data reproducible manner. package provides tools organizing metadata, standardizing coding variables, variable names value labels, including missing values, documenting transformations, help comprehensive S3 classes. Currently generalized problems solved yet released eurobarometer package (doi.)","code":""},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ex Post Survey Data Harmonization","text":"package available CRAN: development version new features create_codebook() functions. can installed GitHub : can download manual PDF 0.2.0 release.","code":"install.packages(\"retroharmonize\") # install.packages(\"devtools\") devtools::install_github(\"rOpenGov/retroharmonize\")"},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"retrospective-data-harmonization","dir":"","previous_headings":"","what":"Retrospective data harmonization","title":"Ex Post Survey Data Harmonization","text":"Survey data harmonization refers procedures improve data comparability inferential capacity multiple surveys. Ex-post retrospective harmonization refers procedures applied data already collected, ex ante harmonization refers survey design makes future retrospective harmonization easier complete. computational point view, tasks similar identical. ex ante harmonization refers procedures followed primary data collected order make later data harmonization easier complete. reproducible workflow aims arrive single data frame contains observations joined different surveys, harmonized coding labelling. Conceptually, can work two versions two workflows. Sometimes may practical alter variable class label/code harmonization. Harmonize concepts -> Tidy datasets -> Harmonize variable names -> Harmonize variable classes -> Harmonize labels codes -> Join data Harmonize concepts -> Tidy datasets -> Harmonize variable names -> Harmonize labels codes - > Harmonize variable classes -> Join data Harmonize concepts -> Tidy datasets -> Harmonize labels codes -> Harmonize variable classes -> Harmonize names -> Join data planning analyze data R, likely want data numeric factor classes, variable types supported many statistical functions many packages. prefer use different analytical software, joined, longitudional data frame must exported consistent manner. first workflow relatively easy implement number variables harmonized relatively low.","code":""},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"working-with-spss-files","dir":"","previous_headings":"","what":"Working with SPSS files","title":"Ex Post Survey Data Harmonization","text":"Survey data often available SPSS’s custom labelled format. Unfortunately, joining data different labelling possible. work first workflow, need preserve history complex harmonization problems, codebook, etc, necessary need look hoods S3 classes. complex reproducible cases, particularly involve SPSS files, retroharmonize package introduces new class storing data together harmonized original metadata, well functions importing data different formats, harmonizing data metadata, documenting harmonization process, converting data types. See overview functionalities. rely haven package import SPSS classes, inherits labelled class labelled. haven package designed harmonize dissimilarly coded SPSS files. new labelled_spss_survey() class inherited extension haven’s labelled_spss class. preserves variable value labels user-defined missing range, also gives identifier, example, filename wave number, vector. Additionally, enables preservation – metadata attributes – original variable names, labels, value codes labels, source data, addition harmonized variable names, labels, value codes labels. way, harmonized data also contain pre-harmonization record. stored original metadata can used validation documentation purposes. vignette Working labelled_spss_survey Class provides information labelled_spss_survey() class. Harmonize Value Labels discuss characteristics labelled_spss_survey() class demonstrates problems using class solves.","code":""},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"use-cases","dir":"","previous_headings":"","what":"Use Cases","title":"Ex Post Survey Data Harmonization","text":"also provide three extensive case studies illustrating retroharmonize package can used ex-post harmonization data cross-national surveys: Afrobarometer Arab Barometer Eurobarometer creators retroharmonize affiliated either Afrobarometer, Arab Barometer, Eurobarometer, organizations designs, produces archives surveys. started building experimental APIs data running retroharmonize regularly improving known statistical data sources. See: Digital Music Observatory, Green Deal Data Observatory, Economy Data Observatory.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"citing-the-data-sources","dir":"","previous_headings":"Citations and related work","what":"Citing the data sources","title":"Ex Post Survey Data Harmonization","text":"package tested three harmonized survey’s microdata. retroharmonize affiliated data sources, replicate tutorials work data, download data files sources, cite sources work. Afrobarometer data: Cite Afrobarometer Arab Barometer data: cite Arab Barometer. Eurobarometer data: Eurobarometer data Eurobarometer raw data related documentation (questionnaires, codebooks, etc.) made available GESIS, ICPSR Social Science Data Archive networks. cite source, examples, rely GESIS data files.","code":""},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"citing-the-retroharmonize-r-package","dir":"","previous_headings":"Citations and related work","what":"Citing the retroharmonize R package","title":"Ex Post Survey Data Harmonization","text":"main developer contributors, see package homepage. work can freely used, modified distributed GPL-3 license:","code":"citation(\"retroharmonize\") #>  #> To cite package 'retroharmonize' in publications use: #>  #>   Daniel Antal (2021). retroharmonize: Ex Post Survey Data #>   Harmonization. https://retroharmonize.dataobservatory.eu/, #>   https://github.com/rOpenGov/retroharmonize. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {retroharmonize: Ex Post Survey Data Harmonization}, #>     author = {Daniel Antal}, #>     year = {2021}, #>     note = {https://retroharmonize.dataobservatory.eu/, #> https://github.com/rOpenGov/retroharmonize}, #>   }"},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"contact","dir":"","previous_headings":"Citations and related work","what":"Contact","title":"Ex Post Survey Data Harmonization","text":"contact information, see package homepage.","code":""},{"path":"https://ropengov.github.io/retroharmonize/index.html","id":"code-of-conduct","dir":"","previous_headings":"Citations and related work","what":"Code of Conduct","title":"Ex Post Survey Data Harmonization","text":"Please note retroharmonize project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/as_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert labelled_spss_survey vector To Factor — as_factor","title":"Convert labelled_spss_survey vector To Factor — as_factor","text":"Convert labelled_spss_survey vector type  factor. Keeps levels class attributes.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/as_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Convert labelled_spss_survey vector To Factor — as_factor","text":"","code":"as_factor(x, levels = \"default\", ordered = FALSE)"},{"path":"https://ropengov.github.io/retroharmonize/reference/as_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert labelled_spss_survey vector To Factor — as_factor","text":"x Object coerce factor. levels create levels generated factor: \"default\": uses labels available, otherwise values. Labels sorted value. \"\": like \"default\", pastes together level value \"label\": use labels; unlabelled values become NA \"values: use values ordered TRUE create ordered (ordinal) factor, FALSE (default) create regular (nominal) factor.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/as_labelled_spss_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Labelled to labelled_spss_survey — as_labelled_spss_survey","title":"Labelled to labelled_spss_survey — as_labelled_spss_survey","text":"Labelled labelled_spss_survey","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/as_labelled_spss_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Labelled to labelled_spss_survey — as_labelled_spss_survey","text":"","code":"as_labelled_spss_survey(x, id)"},{"path":"https://ropengov.github.io/retroharmonize/reference/as_labelled_spss_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labelled to labelled_spss_survey — as_labelled_spss_survey","text":"x vector class haven_labelled haven_labelled_spss. id survey identifier.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/as_labelled_spss_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labelled to labelled_spss_survey — as_labelled_spss_survey","text":"vector labelled_spss_survey","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/collect_val_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect labels from metadata file — collect_val_labels","title":"Collect labels from metadata file — collect_val_labels","text":"Collect labels metadata file","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/collect_val_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Collect labels from metadata file — collect_val_labels","text":"","code":"collect_val_labels(metadata)  collect_na_labels(metadata)"},{"path":"https://ropengov.github.io/retroharmonize/reference/collect_val_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect labels from metadata file — collect_val_labels","text":"metadata metadata data frame created  metadata_create.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/collect_val_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect labels from metadata file — collect_val_labels","text":"unique valid labels user-defined missing  labels found files analyzed metadata.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/concatenate.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate haven_labelled_spss vectors — concatenate","title":"Concatenate haven_labelled_spss vectors — concatenate","text":"Concatenate haven_labelled_spss vectors","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/concatenate.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate haven_labelled_spss vectors — concatenate","text":"","code":"concatenate(x, y)"},{"path":"https://ropengov.github.io/retroharmonize/reference/concatenate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate haven_labelled_spss vectors — concatenate","text":"x haven_labelled_spss vector. y haven_labelled_spss vector.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/concatenate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate haven_labelled_spss vectors — concatenate","text":"concatenated haven_labelled_spss vector. Returns error attributes match. Gives warning variable label match.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/convert_to_labelled_spss.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to haven_labelled_spss — convert_to_labelled_spss","title":"Convert to haven_labelled_spss — convert_to_labelled_spss","text":"Convert haven_labelled_spss","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/convert_to_labelled_spss.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to haven_labelled_spss — convert_to_labelled_spss","text":"","code":"convert_to_labelled_spss(x, na_labels = NULL)"},{"path":"https://ropengov.github.io/retroharmonize/reference/convert_to_labelled_spss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to haven_labelled_spss — convert_to_labelled_spss","text":"x vector na_labels named vector missing values, defaults c( \"inap\" = \"inap\") character vectors c( 99999 = \"inap\") numeric vectors.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/convert_to_labelled_spss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to haven_labelled_spss — convert_to_labelled_spss","text":"haven_labelled_spss vector","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/create_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a codebook — create_codebook","title":"Create a codebook — create_codebook","text":"Create codebook one survey data files.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/create_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a codebook — create_codebook","text":"","code":"create_codebook(metadata = NULL, survey = NULL)  codebook_waves_create(waves)  codebook_surveys_create(survey_list)"},{"path":"https://ropengov.github.io/retroharmonize/reference/create_codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a codebook — create_codebook","text":"metadata metadata table created metadata_create. Defaults NULL. survey survey data frame, defaults NULL. survey given parameter, metadata set metadata particular survey metadata_create. waves list surveys. survey_list list containing surveys class survey.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/create_codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a codebook — create_codebook","text":"codebook survey data frame, including metadata, found  SPSS-type valid missing labels.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/create_codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a codebook — create_codebook","text":"list survey waves, use codebook_waves_create. returned codebook contains labelled variables, .e., numeric character types included, require coding.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Crosswalk surveys — crosswalk_surveys","title":"Crosswalk surveys — crosswalk_surveys","text":"Harmonize surveys crosswalk tables.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Crosswalk surveys — crosswalk_surveys","text":"","code":"crosswalk_surveys(survey_list, crosswalk_table, na_values = NULL)"},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crosswalk surveys — crosswalk_surveys","text":"survey_list list survey objects. crosswalk_table table created crosswalk_table_create,  data frame least following columns: var_name_orig, var_name_target, harmonizing variable names. val_label_orig, val_label_target  present, value labels harmonized, .  var_numeric_orig, var_numeric_target present, numeric codes  variable harmonized. var_class present, class variable  harmonized factor, numeric character using  as_factor, as_numeric, as_character. na_values named vector na_values,  observations defined treated missing  SPSS-style coding. Defaults NULL.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Crosswalk surveys — crosswalk_surveys","text":"Harmonize survey list surveys help crosswalk table. can create crosswalk table crosswalk_table_create, manually  create crosswalk table data frame including least following columns: id identifying survey, var_name_orig original variable name  var_name_target new (target) variable name. Optionally can harmonize value labels, numeric codes, special missing labels, .","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_table_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a crosswalk table — crosswalk_table_create","title":"Create a crosswalk table — crosswalk_table_create","text":"Create crosswalk table source variable names variable labels.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_table_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a crosswalk table — crosswalk_table_create","text":"","code":"crosswalk_table_create(metadata)"},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_table_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a crosswalk table — crosswalk_table_create","text":"metadata metadata table created metadata_create.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_table_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a crosswalk table — crosswalk_table_create","text":"tibble raw crosswalk table. contains harmonization tasks,  target values need set manipulations.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/crosswalk_table_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a crosswalk table — crosswalk_table_create","text":"table contains var_name_target val_label_target column,  values need set manual reproducible harmonization steps.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/document_survey_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Document survey item harmonization — document_survey_item","title":"Document survey item harmonization — document_survey_item","text":"Document current historic coding labelling  variable.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/document_survey_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Document survey item harmonization — document_survey_item","text":"","code":"document_survey_item(x)"},{"path":"https://ropengov.github.io/retroharmonize/reference/document_survey_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document survey item harmonization — document_survey_item","text":"x labelled_spss_survey vector single survey concatenated several surveys.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/document_survey_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document survey item harmonization — document_survey_item","text":"Returns list current historic coding, labelling valid range missing values range, history  variable names history survey IDs.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/document_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Document survey lists — document_surveys","title":"Document survey lists — document_surveys","text":"Document key attributes surveys survey list.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/document_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Document survey lists — document_surveys","text":"","code":"document_surveys(survey_list)  document_waves(waves)"},{"path":"https://ropengov.github.io/retroharmonize/reference/document_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document survey lists — document_surveys","text":"survey_list list survey objects. waves list survey objects.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/document_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document survey lists — document_surveys","text":"Returns data frame key attributes surveys  survey list: name data file, number rows  columns, size object stored memory.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/document_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Document survey lists — document_surveys","text":"earlier form document_waves deprecated.   Currently called document_surveys.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_na_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize na_values in haven_labelled_spss — harmonize_na_values","title":"Harmonize na_values in haven_labelled_spss — harmonize_na_values","text":"Harmonize na_values haven_labelled_spss","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_na_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize na_values in haven_labelled_spss — harmonize_na_values","text":"","code":"harmonize_na_values(df)"},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_na_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize na_values in haven_labelled_spss — harmonize_na_values","text":"df data frame contains haven_labelled_spss vectors.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_na_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize na_values in haven_labelled_spss — harmonize_na_values","text":"tibble na_values consistent","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize values in surveys — harmonize_surveys","title":"Harmonize values in surveys — harmonize_surveys","text":"Harmonize value codes value labels across multiple surveys.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize values in surveys — harmonize_surveys","text":"","code":"harmonize_surveys(survey_list, .f, status_message = FALSE)  harmonize_waves(waves, .f, status_message = FALSE)"},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize values in surveys — harmonize_surveys","text":"survey_list list surveys. deprecated form parameter called waves. .f function apply harmonization. status_message Defaults FALSE. set TRUE shows id survey joined. waves list surveys. Deprecated harmonize_waves.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize values in surveys — harmonize_surveys","text":"natural full join surveys single data frame.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonize values in surveys — harmonize_surveys","text":"functions binds together variables present surveys, applies  harmonization function .f . Till retroharmonize 0.2.0 called harmonize_waves. earlier form harmonize_waves deprecated.  function currently called harmonize_waves.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize the values and labels of labelled vectors — harmonize_values","title":"Harmonize the values and labels of labelled vectors — harmonize_values","text":"Harmonize values labels labelled vectors","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize the values and labels of labelled vectors — harmonize_values","text":"","code":"harmonize_values(   x,   harmonize_label = NULL,   harmonize_labels = NULL,   na_values = c(do_not_know = 99997, declined = 99998, inap = 99999),   na_range = NULL,   id = \"survey_id\",   name_orig = NULL,   remove = NULL,   perl = FALSE )"},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize the values and labels of labelled vectors — harmonize_values","text":"x labelled vector harmonize_label character vector 1L containing new, harmonize variable label. Defaults NULL, case  uses variable label x, unless also NULL. harmonize_labels list harmonization values na_values named vector na_values,  observations defined treated missing  SPSS-style coding. na_range min, max range  na_range,  continuous missing value range. surveys left  NULL. id survey ID, defaults survey_id name_orig original name variable. left NULL uses latest name object x. remove Defaults NULL.  character regex removed old value labels, like \"\\(\"|\\) ( ). perl Use perl-like regex? Defaults FALSE.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize the values and labels of labelled vectors — harmonize_values","text":"labelled vector contains metadata attributes original labelling, original numeric coding current labelling, numerical values representing harmonized coding.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize the variable names of surveys — harmonize_var_names","title":"Harmonize the variable names of surveys — harmonize_var_names","text":"function harmonizes variable names surveys (class survey)  imported external file wave.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize the variable names of surveys — harmonize_var_names","text":"","code":"harmonize_var_names(   survey_list,   metadata,   old = \"var_name_orig\",   new = \"var_name_suggested\",   rowids = TRUE )"},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize the variable names of surveys — harmonize_var_names","text":"survey_list list surveys imported read_surveys metadata metadata table created metadata_create binded together  surveys survey_list. old column name metadata contains old, harmonized variable names. new column name metadata contains new, harmonized variable names. rowids Rename var labels original vars rowid simply uniqid?","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize the variable names of surveys — harmonize_var_names","text":"list surveys harmonized variable names.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/harmonize_var_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonize the variable names of surveys — harmonize_var_names","text":"metadata contains subsetting information subsetted,  subset surveys  survey_list.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/here.html","id":null,"dir":"Reference","previous_headings":"","what":"Here — here","title":"Here — here","text":"utility make sure system files package  files always found, regardless example  vignette context.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Here — here","text":"See ::details.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/label_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize value and variable labels — label_normalize","title":"Normalize value and variable labels — label_normalize","text":"label_normalize removes special characters, whitespace,  typical typing errors.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/label_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize value and variable labels — label_normalize","text":"","code":"label_normalize(x)  var_label_normalize(x)  val_label_normalize(x)"},{"path":"https://ropengov.github.io/retroharmonize/reference/label_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize value and variable labels — label_normalize","text":"x character vector labels normalized.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/label_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize value and variable labels — label_normalize","text":"Returns suggested, normalized label without special characters.  var_label_normalize val_label_normalize returns  snake_case programmatic use.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/label_normalize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize value and variable labels — label_normalize","text":"var_label_normalize val_label_normalize removes possible  chunks question identifiers. functions var_label_normalize  val_label_normalize may  differently implemented various survey series.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/labelled_spss_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Labelled vectors for multiple SPSS surveys — labelled_spss_survey","title":"Labelled vectors for multiple SPSS surveys — labelled_spss_survey","text":"class amending haven::labelled_spss unique object identifier id make later binding joining  reproducible well-documented.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/labelled_spss_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Labelled vectors for multiple SPSS surveys — labelled_spss_survey","text":"","code":"labelled_spss_survey(   x = double(),   labels = NULL,   na_values = NULL,   na_range = NULL,   label = NULL,   id = NULL,   name_orig = NULL )  as_character(x)  is.labelled_spss_survey(x)  as_numeric(x)"},{"path":"https://ropengov.github.io/retroharmonize/reference/labelled_spss_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labelled vectors for multiple SPSS surveys — labelled_spss_survey","text":"x vector label. Must either numeric (integer double) character. labels named vector NULL. vector type x. Unlike factors, labels need exhaustive: fraction values might labelled. na_values vector values also considered missing. na_range numeric vector length two giving (inclusive) extents range. Use -Inf Inf want range open ended. label short, human-readable description vector. id Survey ID name_orig original name variable. left NULL uses latest name object x.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/labelled_spss_survey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Labelled vectors for multiple SPSS surveys — labelled_spss_survey","text":"inherits many methods labelled, uses strict coercion validation rules.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/merge_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge surveys — merge_surveys","title":"Merge surveys — merge_surveys","text":"Merge list surveys list harmonized variable names, variable labels survey identifiers.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/merge_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Merge surveys — merge_surveys","text":"","code":"merge_surveys(survey_list, var_harmonization)  merge_waves(waves, var_harmonization)"},{"path":"https://ropengov.github.io/retroharmonize/reference/merge_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge surveys — merge_surveys","text":"survey_list list surveys var_harmonization Metadata surveys, including least filename, var_name_orig, var_name_target, var_label.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/merge_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge surveys — merge_surveys","text":"list surveys harmonized names variable labels.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/merge_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge surveys — merge_surveys","text":"function called till version 0.2.0 merge_waves(),  reflects vocabulary Eurobarometer surveys.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a metadata table — metadata_create","title":"Create a metadata table — metadata_create","text":"Create metadata table survey data files.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a metadata table — metadata_create","text":"","code":"metadata_create(survey)  metadata_surveys_create(survey_list)  metadata_waves_create(survey_list)"},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a metadata table — metadata_create","text":"survey survey data frame. survey_list list containing surveys class survey.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a metadata table — metadata_create","text":"nested data frame metadata range  labels, na_values na_range .","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a metadata table — metadata_create","text":"data frame like tibble ojbect returned.  case working list surveys (waves), call  metadata_surveys_create, wrapper around  list  metadata_create calls. structure returned tibble: filename original file name; present; missing, non-survey data frame used input survey. id ID survey, present; missing, non-survey data frame used input survey. var_name_orig original variable name SPSS. class_orig original variable class importing withread_spss. label_orig original variable label SPSS. labels list value labels. valid_labels list value labels marked missing values. na_labels list value labels refer user-defined missing values. na_range optional range continuous missing range, present vector. n_labels Number categories unique levels, may different sum missing category labels. n_valid_labels Number categories non-missing range. n_na_labels Number categories variable, sum former two. na_levels list user-defined missing values. form metadata_waves_create deprecated.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a metadata data frame — metadata_initialize","title":"Initialize a metadata data frame — metadata_initialize","text":"Initialize metadata data frame","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a metadata data frame — metadata_initialize","text":"","code":"metadata_initialize(filename, id)"},{"path":"https://ropengov.github.io/retroharmonize/reference/metadata_initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a metadata data frame — metadata_initialize","text":"nested data frame metadata range  labels, na_values na_range .","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/na_range_to_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize user-defined missing value ranges — na_range_to_values","title":"Harmonize user-defined missing value ranges — na_range_to_values","text":"Harmonize na_values attribute  na_range, latter present.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/na_range_to_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize user-defined missing value ranges — na_range_to_values","text":"","code":"na_range_to_values(x)  is.na_range_to_values(x)"},{"path":"https://ropengov.github.io/retroharmonize/reference/na_range_to_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize user-defined missing value ranges — na_range_to_values","text":"x labelled_spss labelled_spss_survey vector","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/na_range_to_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize user-defined missing value ranges — na_range_to_values","text":"x harmonized na_values  na_range attributes. min(na_values) max(na_values) left-  right-hand value na_range, gives warning adjusts original na_range.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/na_range_to_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonize user-defined missing value ranges — na_range_to_values","text":"na_range_to_values() tests function needs  called na_values harmonization. na_range often missing less likely cause logical problems  joining survey answers.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ropengov.github.io/retroharmonize/reference/pull_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull a survey from a survey list — pull_survey","title":"Pull a survey from a survey list — pull_survey","text":"Pull survey survey code id.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/pull_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Pull a survey from a survey list — pull_survey","text":"","code":"pull_survey(survey_list, id = NULL, filename = NULL)"},{"path":"https://ropengov.github.io/retroharmonize/reference/pull_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull a survey from a survey list — pull_survey","text":"survey_list list surveys id id requested survey. NULL use  filename filename filename requested survey.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/pull_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull a survey from a survey list — pull_survey","text":"single survey identified id filename.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/read_dta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Stata DTA files (`.dta`) files — read_dta","title":"Read Stata DTA files (`.dta`) files — read_dta","text":"wrapper around haven::read_dta  exception handling.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_dta.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Read Stata DTA files (`.dta`) files — read_dta","text":"","code":"read_dta(file, id = NULL, filename = NULL, doi = NULL, .name_repair = \"unique\")"},{"path":"https://ropengov.github.io/retroharmonize/reference/read_dta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Stata DTA files (`.dta`) files — read_dta","text":"file STATA file. id identifier tibble, omitted, defaults file name. filename import file name. doi optional document object identifier. .name_repair Defaults \"unique\" See  tibble::as_tibble details.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_dta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Stata DTA files (`.dta`) files — read_dta","text":"tibble.   Variable labels stored \"label\" attribute variable.   printed console, RStudio viewer show .   `write_sav()` returns input `data` invisibly.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_dta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Stata DTA files (`.dta`) files — read_dta","text":"`read_dta()` reads `.dta`  files. funcion yet tested.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/read_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"Read survey from rds file — read_rds","title":"Read survey from rds file — read_rds","text":"Read survey rds file","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Read survey from rds file — read_rds","text":"","code":"read_rds(file, id = NULL, filename = NULL, doi = NULL)"},{"path":"https://ropengov.github.io/retroharmonize/reference/read_rds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read survey from rds file — read_rds","text":"file re-saved survey, imported haven::read_spss id identifier tibble, omitted, defaults file name. filename import file name. doi optional document object identifier.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_rds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read survey from rds file — read_rds","text":"tibble, data frame variant survey attributes.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/read_spss.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SPSS (`.sav`, `.zsav`, `.por`) files. Write `.sav` and `.zsav` files. — read_spss","title":"Read SPSS (`.sav`, `.zsav`, `.por`) files. Write `.sav` and `.zsav` files. — read_spss","text":"wrapper around haven::read_spss  exception handling.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_spss.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Read SPSS (`.sav`, `.zsav`, `.por`) files. Write `.sav` and `.zsav` files. — read_spss","text":"","code":"read_spss(   file,   user_na = TRUE,   id = NULL,   filename = NULL,   doi = NULL,   .name_repair = \"unique\" )"},{"path":"https://ropengov.github.io/retroharmonize/reference/read_spss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SPSS (`.sav`, `.zsav`, `.por`) files. Write `.sav` and `.zsav` files. — read_spss","text":"file SPSS file. user_na user-defined na_values imported? Defaults TRUE. id identifier tibble, omitted, defaults file name. filename import file name. doi optional document object identifier. .name_repair Defaults \"unique\" See  tibble::as_tibble details.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_spss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SPSS (`.sav`, `.zsav`, `.por`) files. Write `.sav` and `.zsav` files. — read_spss","text":"tibble.   Variable labels stored \"label\" attribute variable.   printed console, RStudio viewer show .   `write_sav()` returns input `data` invisibly.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_spss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read SPSS (`.sav`, `.zsav`, `.por`) files. Write `.sav` and `.zsav` files. — read_spss","text":"`read_sav()` reads `.sav` `.zsav` files; `write_sav()` creates `.zsav` files `compress = TRUE`. `read_por()` reads `.por` files. `read_spss()` uses either `read_por()` `read_sav()` based file extension. SPSS file columns class labelled, labels, read numeric character vectors.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/read_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Survey Files — read_surveys","title":"Read Survey Files — read_surveys","text":"Import surveys list. Adds filename constant element list.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Read Survey Files — read_surveys","text":"","code":"read_surveys(import_file_names, .f = \"read_rds\", save_to_rds = FALSE)"},{"path":"https://ropengov.github.io/retroharmonize/reference/read_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Survey Files — read_surveys","text":"import_file_names vector file names import. .f function import surveys . Defaults 'read_rds'. SPSS files, read_spss recommended, well-parameterized version read_spss saves metadata, . save_to_rds save imported survey .rds? Defaults FALSE.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Survey Files — read_surveys","text":"list surveys.  element list data frame-like survey type object metadata,  original file name, doi identifier present, information recorded reproducible workflow.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/read_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Survey Files — read_surveys","text":"functions handle exceptions wrong filenames readable  files. file read, warning given, empty survey added  list place file.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":null,"dir":"Reference","previous_headings":"","what":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"goal retroharmonize facilitate retrospective (ex-post)  harmonization data, particularly survey data, reproducible manner.  package provides tools organizing metadata, standardizing  coding variables, variable names value labels, including missing  values, documenting transformations, help  comprehensive S3 classes.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":"import-functions","dir":"Reference","previous_headings":"","what":"import functions","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"Read data stored formats rich metadata, SPSS (.sav) files,  make usable programmatic context.read_spss: read SPSS file record metadata reproducibilityread_rds: read rds file record metadata reproducibilityread_surveys: programmatically read list surveyssubset_save_surveys: programmatically read list surveys,  subset (pre-harmonize variables.)pull_survey: pull single survey survey list.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":"variable-name-harmonization-functions","dir":"Reference","previous_headings":"","what":"variable name harmonization functions","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"label_normalize removes special characters, whitespace,  typical typing errors helps uniformization labels variable names.suggest_permanent_names: Suggest use variable naming conventions.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":"variable-label-harmonization-functions","dir":"Reference","previous_headings":"","what":"variable label harmonization functions","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"Create consistent coding labelling.create_codebook: Create codebook original SPSS variable codes labels.harmonize_values: Harmonize label list across surveys.harmonize_surveys: Create list surveys harmonized value labels.na_range_to_values: Make na_range attributes, imported SPSS, consistent na_values attributes.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":"survey-harmonization-functions","dir":"Reference","previous_headings":"","what":"survey harmonization functions","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"merge_surveys: Create list surveys harmonized names variable labels.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":"documentation-functions","dir":"Reference","previous_headings":"","what":"documentation functions","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"metadata_create metadata_surveys_createcreate_codebook codebook_waves_create Make workflow reproducible recording harmonization process. document_survey_item: Returns list current historic coding,  labelling valid range missing values range, history variable names  history survey IDs. document_surveys: Document key attributes surveys survey list.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/retroharmonize.html","id":"type-conversion-functions","dir":"Reference","previous_headings":"","what":"type conversion functions","title":"retroharmonize: Retrospective harmonization of survey data files — retroharmonize","text":"Consistently treat labels SPSS-style user-defined missing  values R language. survey helps constructing valid survey data frame, labelled_spss_survey helps creating vector  questionnaire item. as_numeric: convert numeric values.as_factor: convert labels factor levels.as_character: convert labels characters.as_labelled_spss_survey: convert labelled labelled_spss vectors labelled_spss_survey vectors.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_save_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset and Save Surveys — subset_save_surveys","title":"Subset and Save Surveys — subset_save_surveys","text":"Read predefined survey list variables.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_save_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Subset and Save Surveys — subset_save_surveys","text":"","code":"subset_save_surveys(   var_harmonization,   selection_name = \"trust\",   import_path = \"\",   export_path = \"working\" )"},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_save_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset and Save Surveys — subset_save_surveys","text":"var_harmonization Metadata surveys, including least filename, var_name_orig, var_name,  var_label. selection_name identifier survey subset. import_path path survey files. export_path path subsets saved.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_save_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset and Save Surveys — subset_save_surveys","text":"function return value. saves subsetted surveys .rds files.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset all surveys in a wave — subset_surveys","title":"Subset all surveys in a wave — subset_surveys","text":"function harmonizes variable names surveys (class survey)  imported external file wave read_surveys.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Subset all surveys in a wave — subset_surveys","text":"","code":"subset_surveys(survey_list, rowid = \"rowid\", subset_names = NULL)  subset_waves(waves, subset_names = NULL)"},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset all surveys in a wave — subset_surveys","text":"survey_list list surveys imported read_surveys. rowid unique row (observation) identifier files. Defaults  \"rowid\", default importing functions package. subset_names names variables kept surveys list contains wave surveys. Defaults NULL case returns variables without subsetting. waves list surveys imported read_surveys.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset all surveys in a wave — subset_surveys","text":"list surveys harmonized variable names.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/subset_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset all surveys in a wave — subset_surveys","text":"likely want harmonize variable names  harmonize_var_names first.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_permanent_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest permanent names — suggest_permanent_names","title":"Suggest permanent names — suggest_permanent_names","text":"Suggest use established naming conventions.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_permanent_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest permanent names — suggest_permanent_names","text":"","code":"suggest_permanent_names(survey_program = \"eurobarometer\")"},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_permanent_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest permanent names — suggest_permanent_names","text":"survey_program Suggest permanent names survey progarm \"eurobarometer\"","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_permanent_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest permanent names — suggest_permanent_names","text":"character vector suggested permanent names.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_permanent_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suggest permanent names — suggest_permanent_names","text":"Established survey programs usually variable name conventions.  suggested constant names keep variable names constant.","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest variable names — suggest_var_names","title":"Suggest variable names — suggest_var_names","text":"function harmonizes variable names surveys (class survey)  imported external file wave.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest variable names — suggest_var_names","text":"","code":"suggest_var_names(   metadata,   permanent_names = NULL,   survey_program = NULL,   case = \"snake\" )"},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest variable names — suggest_var_names","text":"metadata metadata table created metadata_create binded together  surveys waves. permanent_names character vector names keep. survey_program permanent_names = NULL suggest_permanent_names  called parameter, unless also NULL case Unless set NULL standardize suggested variable name  to_any_case. default \"snake\".","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/suggest_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest variable names — suggest_var_names","text":"metadata tibble augmented $var_name_suggested","code":""},{"path":[]},{"path":"https://ropengov.github.io/retroharmonize/reference/survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey data frame — survey","title":"Survey data frame — survey","text":"Store data survey tibble (data frame) unique survey identifier, import filename, optional doi.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Survey data frame — survey","text":"","code":"survey(   object = data.frame(),   id = character(),   filename = character(),   doi = character() )  is.survey(object)  # S3 method for survey summary(object, ...)"},{"path":"https://ropengov.github.io/retroharmonize/reference/survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey data frame — survey","text":"object tibble data frame contains survey data. id mandatory identifier survey filename import file name. doi Optional doi, can omitted. ... Arguments passed summary method.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survey data frame — survey","text":"tibble id,  filename,  doimetadata information.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/validate_harmonize_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate harmonize_labels parameter\nCheck if ","title":"Validate harmonize_labels parameter\nCheck if ","text":"Validate harmonize_labels parameter Check \"\", \"\", \"numeric_values\" equal lengths.","code":""},{"path":"https://ropengov.github.io/retroharmonize/reference/validate_harmonize_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Validate harmonize_labels parameter\nCheck if ","text":"","code":"validate_harmonize_labels(harmonize_labels)"},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-022","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.2.2","title":"retroharmonize 0.2.2","text":"functions containing ‘wave’ name deprecated. Survey ‘waves’ renamed ‘survey_list’, ‘waves’ used Eurobarometer generaic standardized interface built.","code":""},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-020","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.2.0","title":"retroharmonize 0.2.0","text":"CRAN release: 2021-11-02 Adding rogtemplate consistent ROpenGov documentation. Several documentation good practices. (Thanks contribution @dieghernan). former create_codebook() function now create_codebook() naming consistency.","code":""},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-019","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.1.9","title":"retroharmonize 0.1.9","text":"New function read_dta() importing STATA files.","code":""},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-0113","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.1.13","title":"retroharmonize 0.1.13","text":"CRAN release: 2020-09-21 examples use file operations, dontrun{} replaced donttest{}. first released version CRAN.","code":""},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-0112","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.1.12","title":"retroharmonize 0.1.12","text":"retroharmonize 0.1.6-0.1.12 making package ready CRAN release.","code":""},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-015","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.1.5","title":"retroharmonize 0.1.5","text":"retroharmonize 0.1.1-0.1.5 intended release, contain numerous development stages new package.","code":""},{"path":"https://ropengov.github.io/retroharmonize/news/index.html","id":"retroharmonize-010","dir":"Changelog","previous_headings":"","what":"retroharmonize 0.1.0","title":"retroharmonize 0.1.0","text":"Added NEWS.md file track changes package. Class definition description.","code":""}]
